"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./app/providers.tsx":
/*!***************************!*\
  !*** ./app/providers.tsx ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Providers: function() { return /* binding */ Providers; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/auth */ \"(app-pages-browser)/./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* harmony import */ var _services_firebase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/services/firebase */ \"(app-pages-browser)/./services/firebase.ts\");\n/* __next_internal_client_entry_do_not_use__ useAuth,Providers auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    user: null,\n    role: null,\n    loading: true,\n    isFirebaseConfigured: false\n});\nconst useAuth = ()=>{\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n// Function to determine user role based on email\nfunction getUserRoleFromEmail(email) {\n    console.log(\"\\uD83D\\uDD0D Determining role for email:\", email);\n    if (!email) {\n        console.log(\"❌ No email provided, defaulting to client\");\n        return \"client\";\n    }\n    const lowerEmail = email.toLowerCase();\n    // Super Admin - Miguel Giraldo\n    if (lowerEmail === \"miguel.giraldo@gladgrade.com\") {\n        console.log(\"\\uD83D\\uDC51 Super Admin detected!\");\n        return \"super_admin\";\n    }\n    // GladGrade employees - anyone with @gladgrade.com domain\n    if (lowerEmail.endsWith(\"@gladgrade.com\")) {\n        console.log(\"\\uD83C\\uDFE2 GladGrade employee detected\");\n        if (lowerEmail.includes(\"admin\")) {\n            console.log(\"\\uD83D\\uDEE1️ Admin role assigned\");\n            return \"admin\";\n        }\n        if (lowerEmail.includes(\"moderator\") || lowerEmail.includes(\"mod\")) {\n            console.log(\"\\uD83D\\uDD0D Moderator role assigned\");\n            return \"moderator\";\n        }\n        if (lowerEmail.includes(\"support\") || lowerEmail.includes(\"employee\")) {\n            console.log(\"\\uD83D\\uDC64 Employee role assigned\");\n            return \"employee\";\n        }\n        // Default for @gladgrade.com emails is admin\n        console.log(\"\\uD83D\\uDEE1️ Default admin role for GladGrade employee\");\n        return \"admin\";\n    }\n    // All other domains are clients\n    console.log(\"\\uD83C\\uDFEA Client role assigned\");\n    return \"client\";\n}\nfunction Providers(param) {\n    let { children } = param;\n    _s1();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [role, setRole] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [isFirebaseConfigured, setIsFirebaseConfigured] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"\\uD83D\\uDE80 Providers useEffect running...\");\n        // Check if Firebase is properly configured - simplified check\n        const hasValidConfig = !!( true && \"1:360532994710:web:7376b3b3bab542567bf0b7\");\n        console.log(\"\\uD83D\\uDD27 Firebase configured:\", hasValidConfig);\n        console.log(\"\\uD83D\\uDD27 Environment check:\", {\n            apiKey: !!\"AIzaSyDD3_U64MVrZp2iNxYWVX9_hHytC9x_WVo\",\n            projectId: !!\"reactgladgrade\",\n            authDomain: !!\"reactgladgrade.firebaseapp.com\",\n            appId: !!\"1:360532994710:web:7376b3b3bab542567bf0b7\"\n        });\n        setIsFirebaseConfigured(hasValidConfig);\n        if (_services_firebase__WEBPACK_IMPORTED_MODULE_3__.auth && hasValidConfig) {\n            console.log(\"\\uD83D\\uDD10 Setting up Firebase auth listener...\");\n            const unsubscribe = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.onAuthStateChanged)(_services_firebase__WEBPACK_IMPORTED_MODULE_3__.auth, async (user)=>{\n                console.log(\"\\uD83D\\uDD04 Auth state changed:\", user ? \"User: \".concat(user.email) : \"No user\");\n                setUser(user);\n                if (user && user.email) {\n                    try {\n                        console.log(\"\\uD83C\\uDFAF Getting user role...\");\n                        // First try to get role from Firebase custom claims\n                        const token = await user.getIdTokenResult();\n                        let userRole = token.claims.role;\n                        console.log(\"\\uD83C\\uDFF7️ Custom claim role:\", userRole);\n                        // If no custom claim exists, determine role from email domain\n                        if (!userRole) {\n                            userRole = getUserRoleFromEmail(user.email);\n                            console.log(\"\\uD83D\\uDD10 Role assigned based on email domain: \".concat(user.email, \" → \").concat(userRole));\n                        }\n                        setRole(userRole);\n                        console.log(\"✅ Final role set:\", userRole);\n                    } catch (error) {\n                        console.error(\"❌ Error getting user role:\", error);\n                        // Fallback to email-based role assignment\n                        const fallbackRole = getUserRoleFromEmail(user.email);\n                        setRole(fallbackRole);\n                        console.log(\"\\uD83D\\uDD04 Fallback role assigned: \".concat(user.email, \" → \").concat(fallbackRole));\n                    }\n                } else {\n                    console.log(\"\\uD83D\\uDC64 No user, setting role to null\");\n                    setRole(null);\n                }\n                console.log(\"⏰ Setting loading to false\");\n                setLoading(false);\n            });\n            return ()=>{\n                console.log(\"\\uD83E\\uDDF9 Cleaning up auth listener\");\n                unsubscribe();\n            };\n        } else {\n            // If Firebase is not configured, set loading to false\n            console.log(\"❌ Firebase not configured or auth not available\");\n            setLoading(false);\n        }\n    }, []);\n    console.log(\"\\uD83C\\uDFA8 Rendering Providers with:\", {\n        user: user === null || user === void 0 ? void 0 : user.email,\n        role,\n        loading,\n        isFirebaseConfigured\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            role,\n            loading,\n            isFirebaseConfigured\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/miguelgiraldo/DEVSPACE/dev_gladgrade_portal/app/providers.tsx\",\n        lineNumber: 151,\n        columnNumber: 10\n    }, this);\n}\n_s1(Providers, \"cFhGVgyuDDQUP4AhSNQijX8nth4=\");\n_c = Providers;\nvar _c;\n$RefreshReg$(_c, \"Providers\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/providers.tsx\n"));

/***/ })

});