"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/settings/organization/route";
exports.ids = ["app/api/settings/organization/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

module.exports = import("pg");;

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsettings%2Forganization%2Froute&page=%2Fapi%2Fsettings%2Forganization%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsettings%2Forganization%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsettings%2Forganization%2Froute&page=%2Fapi%2Fsettings%2Forganization%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsettings%2Forganization%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_settings_organization_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/settings/organization/route.ts */ \"(rsc)/./app/api/settings/organization/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_settings_organization_route_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_settings_organization_route_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/settings/organization/route\",\n        pathname: \"/api/settings/organization\",\n        filename: \"route\",\n        bundlePath: \"app/api/settings/organization/route\"\n    },\n    resolvedPagePath: \"/Users/miguelgiraldo/DEVSPACE/dev_gladgrade_portal/app/api/settings/organization/route.ts\",\n    nextConfigOutput,\n    userland: _Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_settings_organization_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/settings/organization/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzZXR0aW5ncyUyRm9yZ2FuaXphdGlvbiUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGc2V0dGluZ3MlMkZvcmdhbml6YXRpb24lMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZzZXR0aW5ncyUyRm9yZ2FuaXphdGlvbiUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm1pZ3VlbGdpcmFsZG8lMkZERVZTUEFDRSUyRmRldl9nbGFkZ3JhZGVfcG9ydGFsJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRm1pZ3VlbGdpcmFsZG8lMkZERVZTUEFDRSUyRmRldl9nbGFkZ3JhZGVfcG9ydGFsJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN5QztBQUN0SDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvPzAyZDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL21pZ3VlbGdpcmFsZG8vREVWU1BBQ0UvZGV2X2dsYWRncmFkZV9wb3J0YWwvYXBwL2FwaS9zZXR0aW5ncy9vcmdhbml6YXRpb24vcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3NldHRpbmdzL29yZ2FuaXphdGlvbi9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3NldHRpbmdzL29yZ2FuaXphdGlvblwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc2V0dGluZ3Mvb3JnYW5pemF0aW9uL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL21pZ3VlbGdpcmFsZG8vREVWU1BBQ0UvZGV2X2dsYWRncmFkZV9wb3J0YWwvYXBwL2FwaS9zZXR0aW5ncy9vcmdhbml6YXRpb24vcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3NldHRpbmdzL29yZ2FuaXphdGlvbi9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsettings%2Forganization%2Froute&page=%2Fapi%2Fsettings%2Forganization%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsettings%2Forganization%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/settings/organization/route.ts":
/*!************************************************!*\
  !*** ./app/api/settings/organization/route.ts ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./lib/database.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_database__WEBPACK_IMPORTED_MODULE_1__]);\n_lib_database__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// GET /api/settings/organization\nasync function GET() {\n    try {\n        console.log(\"\\uD83C\\uDFE2 Fetching organization settings from PostgreSQL...\");\n        const result = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(\"SELECT * FROM organization_settings ORDER BY id LIMIT 1\");\n        if (result.rows.length === 0) {\n            // Create default settings if none exist\n            const defaultResult = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(`\n        INSERT INTO organization_settings (org_name, org_domain, org_address, support_email, admin_email)\n        VALUES ($1, $2, $3, $4, $5)\n        RETURNING *\n      `, [\n                \"GladGrade Holding Corporation\",\n                \"gladgrade.com\",\n                \"Miami, Florida, USA\",\n                \"support@gladgrade.com\",\n                \"admin@gladgrade.com\"\n            ]);\n            console.log(\"✅ Created default organization settings\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                data: defaultResult.rows[0]\n            });\n        }\n        console.log(\"✅ Organization settings fetched successfully\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: result.rows[0]\n        });\n    } catch (error) {\n        console.error(\"❌ Error fetching organization settings:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to fetch organization settings\",\n            details: errorMessage\n        }, {\n            status: 500\n        });\n    }\n}\n// PUT /api/settings/organization\nasync function PUT(request) {\n    try {\n        const updates = await request.json();\n        console.log(\"\\uD83D\\uDD04 Updating organization settings...\");\n        const result = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(`\n      UPDATE organization_settings\n      SET org_name = $1, org_domain = $2, org_address = $3,\n          support_email = $4, admin_email = $5, min_gcsg_score = $6,\n          max_gcsg_score = $7, gcsg_update_frequency = $8, updated_at = CURRENT_TIMESTAMP\n      WHERE id = (SELECT id FROM organization_settings ORDER BY id LIMIT 1)\n      RETURNING *\n    `, [\n            updates.org_name,\n            updates.org_domain,\n            updates.org_address,\n            updates.support_email,\n            updates.admin_email,\n            updates.min_gcsg_score,\n            updates.max_gcsg_score,\n            updates.gcsg_update_frequency\n        ]);\n        if (result.rows.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Organization settings not found\"\n            }, {\n                status: 404\n            });\n        }\n        console.log(\"✅ Organization settings updated successfully\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: result.rows[0]\n        });\n    } catch (error) {\n        console.error(\"❌ Error updating organization settings:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to update organization settings\",\n            details: errorMessage\n        }, {\n            status: 500\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3NldHRpbmdzL29yZ2FuaXphdGlvbi9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTREO0FBQ3RCO0FBRXRDLGlDQUFpQztBQUMxQixlQUFlRTtJQUNwQixJQUFJO1FBQ0ZDLFFBQVFDLEdBQUcsQ0FBQztRQUVaLE1BQU1DLFNBQVMsTUFBTUosb0RBQUtBLENBQUM7UUFFM0IsSUFBSUksT0FBT0MsSUFBSSxDQUFDQyxNQUFNLEtBQUssR0FBRztZQUM1Qix3Q0FBd0M7WUFDeEMsTUFBTUMsZ0JBQWdCLE1BQU1QLG9EQUFLQSxDQUMvQixDQUFDOzs7O01BSUgsQ0FBQyxFQUNDO2dCQUNFO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2FBQ0Q7WUFHSEUsUUFBUUMsR0FBRyxDQUFDO1lBQ1osT0FBT0oscURBQVlBLENBQUNTLElBQUksQ0FBQztnQkFDdkJDLFNBQVM7Z0JBQ1RDLE1BQU1ILGNBQWNGLElBQUksQ0FBQyxFQUFFO1lBQzdCO1FBQ0Y7UUFFQUgsUUFBUUMsR0FBRyxDQUFDO1FBRVosT0FBT0oscURBQVlBLENBQUNTLElBQUksQ0FBQztZQUN2QkMsU0FBUztZQUNUQyxNQUFNTixPQUFPQyxJQUFJLENBQUMsRUFBRTtRQUN0QjtJQUNGLEVBQUUsT0FBT00sT0FBZ0I7UUFDdkJULFFBQVFTLEtBQUssQ0FBQywyQ0FBMkNBO1FBQ3pELE1BQU1DLGVBQWVELGlCQUFpQkUsUUFBUUYsTUFBTUcsT0FBTyxHQUFHO1FBQzlELE9BQU9mLHFEQUFZQSxDQUFDUyxJQUFJLENBQ3RCO1lBQ0VDLFNBQVM7WUFDVEUsT0FBTztZQUNQSSxTQUFTSDtRQUNYLEdBQ0E7WUFBRUksUUFBUTtRQUFJO0lBRWxCO0FBQ0Y7QUFFQSxpQ0FBaUM7QUFDMUIsZUFBZUMsSUFBSUMsT0FBb0I7SUFDNUMsSUFBSTtRQUNGLE1BQU1DLFVBQVUsTUFBTUQsUUFBUVYsSUFBSTtRQUVsQ04sUUFBUUMsR0FBRyxDQUFDO1FBRVosTUFBTUMsU0FBUyxNQUFNSixvREFBS0EsQ0FDeEIsQ0FBQzs7Ozs7OztJQU9ILENBQUMsRUFDQztZQUNFbUIsUUFBUUMsUUFBUTtZQUNoQkQsUUFBUUUsVUFBVTtZQUNsQkYsUUFBUUcsV0FBVztZQUNuQkgsUUFBUUksYUFBYTtZQUNyQkosUUFBUUssV0FBVztZQUNuQkwsUUFBUU0sY0FBYztZQUN0Qk4sUUFBUU8sY0FBYztZQUN0QlAsUUFBUVEscUJBQXFCO1NBQzlCO1FBR0gsSUFBSXZCLE9BQU9DLElBQUksQ0FBQ0MsTUFBTSxLQUFLLEdBQUc7WUFDNUIsT0FBT1AscURBQVlBLENBQUNTLElBQUksQ0FBQztnQkFBRUMsU0FBUztnQkFBT0UsT0FBTztZQUFrQyxHQUFHO2dCQUFFSyxRQUFRO1lBQUk7UUFDdkc7UUFFQWQsUUFBUUMsR0FBRyxDQUFDO1FBRVosT0FBT0oscURBQVlBLENBQUNTLElBQUksQ0FBQztZQUN2QkMsU0FBUztZQUNUQyxNQUFNTixPQUFPQyxJQUFJLENBQUMsRUFBRTtRQUN0QjtJQUNGLEVBQUUsT0FBT00sT0FBZ0I7UUFDdkJULFFBQVFTLEtBQUssQ0FBQywyQ0FBMkNBO1FBQ3pELE1BQU1DLGVBQWVELGlCQUFpQkUsUUFBUUYsTUFBTUcsT0FBTyxHQUFHO1FBQzlELE9BQU9mLHFEQUFZQSxDQUFDUyxJQUFJLENBQ3RCO1lBQ0VDLFNBQVM7WUFDVEUsT0FBTztZQUNQSSxTQUFTSDtRQUNYLEdBQ0E7WUFBRUksUUFBUTtRQUFJO0lBRWxCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vYXBwL2FwaS9zZXR0aW5ncy9vcmdhbml6YXRpb24vcm91dGUudHM/MWQ3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0eXBlIE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIlxuaW1wb3J0IHsgcXVlcnkgfSBmcm9tIFwiQC9saWIvZGF0YWJhc2VcIlxuXG4vLyBHRVQgL2FwaS9zZXR0aW5ncy9vcmdhbml6YXRpb25cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoKSB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coXCLwn4+iIEZldGNoaW5nIG9yZ2FuaXphdGlvbiBzZXR0aW5ncyBmcm9tIFBvc3RncmVTUUwuLi5cIilcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHF1ZXJ5KFwiU0VMRUNUICogRlJPTSBvcmdhbml6YXRpb25fc2V0dGluZ3MgT1JERVIgQlkgaWQgTElNSVQgMVwiKVxuXG4gICAgaWYgKHJlc3VsdC5yb3dzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgLy8gQ3JlYXRlIGRlZmF1bHQgc2V0dGluZ3MgaWYgbm9uZSBleGlzdFxuICAgICAgY29uc3QgZGVmYXVsdFJlc3VsdCA9IGF3YWl0IHF1ZXJ5KFxuICAgICAgICBgXG4gICAgICAgIElOU0VSVCBJTlRPIG9yZ2FuaXphdGlvbl9zZXR0aW5ncyAob3JnX25hbWUsIG9yZ19kb21haW4sIG9yZ19hZGRyZXNzLCBzdXBwb3J0X2VtYWlsLCBhZG1pbl9lbWFpbClcbiAgICAgICAgVkFMVUVTICgkMSwgJDIsICQzLCAkNCwgJDUpXG4gICAgICAgIFJFVFVSTklORyAqXG4gICAgICBgLFxuICAgICAgICBbXG4gICAgICAgICAgXCJHbGFkR3JhZGUgSG9sZGluZyBDb3Jwb3JhdGlvblwiLFxuICAgICAgICAgIFwiZ2xhZGdyYWRlLmNvbVwiLFxuICAgICAgICAgIFwiTWlhbWksIEZsb3JpZGEsIFVTQVwiLFxuICAgICAgICAgIFwic3VwcG9ydEBnbGFkZ3JhZGUuY29tXCIsXG4gICAgICAgICAgXCJhZG1pbkBnbGFkZ3JhZGUuY29tXCIsXG4gICAgICAgIF0sXG4gICAgICApXG5cbiAgICAgIGNvbnNvbGUubG9nKFwi4pyFIENyZWF0ZWQgZGVmYXVsdCBvcmdhbml6YXRpb24gc2V0dGluZ3NcIilcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIGRhdGE6IGRlZmF1bHRSZXN1bHQucm93c1swXSxcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coXCLinIUgT3JnYW5pemF0aW9uIHNldHRpbmdzIGZldGNoZWQgc3VjY2Vzc2Z1bGx5XCIpXG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGRhdGE6IHJlc3VsdC5yb3dzWzBdLFxuICAgIH0pXG4gIH0gY2F0Y2ggKGVycm9yOiB1bmtub3duKSB7XG4gICAgY29uc29sZS5lcnJvcihcIuKdjCBFcnJvciBmZXRjaGluZyBvcmdhbml6YXRpb24gc2V0dGluZ3M6XCIsIGVycm9yKVxuICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogXCJVbmtub3duIGVycm9yIG9jY3VycmVkXCJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjogXCJGYWlsZWQgdG8gZmV0Y2ggb3JnYW5pemF0aW9uIHNldHRpbmdzXCIsXG4gICAgICAgIGRldGFpbHM6IGVycm9yTWVzc2FnZSxcbiAgICAgIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH0sXG4gICAgKVxuICB9XG59XG5cbi8vIFBVVCAvYXBpL3NldHRpbmdzL29yZ2FuaXphdGlvblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBVVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IHVwZGF0ZXMgPSBhd2FpdCByZXF1ZXN0Lmpzb24oKVxuXG4gICAgY29uc29sZS5sb2coXCLwn5SEIFVwZGF0aW5nIG9yZ2FuaXphdGlvbiBzZXR0aW5ncy4uLlwiKVxuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcXVlcnkoXG4gICAgICBgXG4gICAgICBVUERBVEUgb3JnYW5pemF0aW9uX3NldHRpbmdzXG4gICAgICBTRVQgb3JnX25hbWUgPSAkMSwgb3JnX2RvbWFpbiA9ICQyLCBvcmdfYWRkcmVzcyA9ICQzLFxuICAgICAgICAgIHN1cHBvcnRfZW1haWwgPSAkNCwgYWRtaW5fZW1haWwgPSAkNSwgbWluX2djc2dfc2NvcmUgPSAkNixcbiAgICAgICAgICBtYXhfZ2NzZ19zY29yZSA9ICQ3LCBnY3NnX3VwZGF0ZV9mcmVxdWVuY3kgPSAkOCwgdXBkYXRlZF9hdCA9IENVUlJFTlRfVElNRVNUQU1QXG4gICAgICBXSEVSRSBpZCA9IChTRUxFQ1QgaWQgRlJPTSBvcmdhbml6YXRpb25fc2V0dGluZ3MgT1JERVIgQlkgaWQgTElNSVQgMSlcbiAgICAgIFJFVFVSTklORyAqXG4gICAgYCxcbiAgICAgIFtcbiAgICAgICAgdXBkYXRlcy5vcmdfbmFtZSxcbiAgICAgICAgdXBkYXRlcy5vcmdfZG9tYWluLFxuICAgICAgICB1cGRhdGVzLm9yZ19hZGRyZXNzLFxuICAgICAgICB1cGRhdGVzLnN1cHBvcnRfZW1haWwsXG4gICAgICAgIHVwZGF0ZXMuYWRtaW5fZW1haWwsXG4gICAgICAgIHVwZGF0ZXMubWluX2djc2dfc2NvcmUsXG4gICAgICAgIHVwZGF0ZXMubWF4X2djc2dfc2NvcmUsXG4gICAgICAgIHVwZGF0ZXMuZ2NzZ191cGRhdGVfZnJlcXVlbmN5LFxuICAgICAgXSxcbiAgICApXG5cbiAgICBpZiAocmVzdWx0LnJvd3MubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IFwiT3JnYW5pemF0aW9uIHNldHRpbmdzIG5vdCBmb3VuZFwiIH0sIHsgc3RhdHVzOiA0MDQgfSlcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZyhcIuKchSBPcmdhbml6YXRpb24gc2V0dGluZ3MgdXBkYXRlZCBzdWNjZXNzZnVsbHlcIilcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZGF0YTogcmVzdWx0LnJvd3NbMF0sXG4gICAgfSlcbiAgfSBjYXRjaCAoZXJyb3I6IHVua25vd24pIHtcbiAgICBjb25zb2xlLmVycm9yKFwi4p2MIEVycm9yIHVwZGF0aW5nIG9yZ2FuaXphdGlvbiBzZXR0aW5nczpcIiwgZXJyb3IpXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBcIlVua25vd24gZXJyb3Igb2NjdXJyZWRcIlxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiBcIkZhaWxlZCB0byB1cGRhdGUgb3JnYW5pemF0aW9uIHNldHRpbmdzXCIsXG4gICAgICAgIGRldGFpbHM6IGVycm9yTWVzc2FnZSxcbiAgICAgIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH0sXG4gICAgKVxuICB9XG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwicXVlcnkiLCJHRVQiLCJjb25zb2xlIiwibG9nIiwicmVzdWx0Iiwicm93cyIsImxlbmd0aCIsImRlZmF1bHRSZXN1bHQiLCJqc29uIiwic3VjY2VzcyIsImRhdGEiLCJlcnJvciIsImVycm9yTWVzc2FnZSIsIkVycm9yIiwibWVzc2FnZSIsImRldGFpbHMiLCJzdGF0dXMiLCJQVVQiLCJyZXF1ZXN0IiwidXBkYXRlcyIsIm9yZ19uYW1lIiwib3JnX2RvbWFpbiIsIm9yZ19hZGRyZXNzIiwic3VwcG9ydF9lbWFpbCIsImFkbWluX2VtYWlsIiwibWluX2djc2dfc2NvcmUiLCJtYXhfZ2NzZ19zY29yZSIsImdjc2dfdXBkYXRlX2ZyZXF1ZW5jeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/settings/organization/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closePool: () => (/* binding */ closePool),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getClient: () => (/* binding */ getClient),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   testConnection: () => (/* binding */ testConnection)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([pg__WEBPACK_IMPORTED_MODULE_0__]);\npg__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Determine connection method based on environment\nconst isProduction = \"development\" === \"production\";\nconst isGoogleCloud = process.env.GOOGLE_CLOUD_PROJECT || process.env.FIREBASE_PROJECT_ID;\n// Database connection configuration\nconst dbConfig = (()=>{\n    // Method 1: Unix Socket (for Google Cloud Run/App Engine)\n    if (isProduction && isGoogleCloud) {\n        console.log(\"\\uD83D\\uDD17 Using Unix Socket connection for Google Cloud\");\n        return {\n            host: `/cloudsql/${process.env.FIREBASE_PROJECT_ID}:us-east4:gg-instance`,\n            database: process.env.DB_NAME || \"corp\",\n            user: process.env.DB_USER || \"postgres\",\n            password: process.env.DB_PASSWORD,\n            ssl: false,\n            max: 20,\n            idleTimeoutMillis: 30000,\n            connectionTimeoutMillis: 10000\n        };\n    }\n    // Method 2: Public IP (for local development)\n    console.log(\"\\uD83D\\uDD17 Using Public IP connection for local development\");\n    return {\n        host: process.env.DB_HOST || \"34.86.121.148\",\n        port: Number.parseInt(process.env.DB_PORT || \"5432\"),\n        database: process.env.DB_NAME || \"corp\",\n        user: process.env.DB_USER || \"postgres\",\n        password: process.env.DB_PASSWORD,\n        ssl: {\n            rejectUnauthorized: false\n        },\n        max: 20,\n        idleTimeoutMillis: 30000,\n        connectionTimeoutMillis: 10000\n    };\n})();\n// Create connection pool\nconst pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool(dbConfig);\n// Handle pool errors\npool.on(\"error\", (err)=>{\n    console.error(\"❌ Unexpected error on idle client\", err);\n    process.exit(-1);\n});\n// Log connection details (without password)\nconsole.log(\"\\uD83D\\uDD27 Database Configuration:\", {\n    host: dbConfig.host,\n    port: dbConfig.port || \"Unix Socket\",\n    database: dbConfig.database,\n    user: dbConfig.user,\n    ssl: !!dbConfig.ssl,\n    environment: \"development\",\n    isGoogleCloud: !!isGoogleCloud\n});\n// Test database connection\nasync function testConnection() {\n    try {\n        console.log(\"\\uD83E\\uDDEA Testing database connection...\");\n        const client = await pool.connect();\n        const result = await client.query(`\n      SELECT \n        NOW() as current_time, \n        version() as postgres_version,\n        current_database() as database_name,\n        current_user as current_user,\n        inet_server_addr() as server_ip\n    `);\n        client.release();\n        const connectionInfo = result.rows[0];\n        console.log(\"✅ Database connected successfully!\");\n        console.log(\"\\uD83D\\uDD50 Current time:\", connectionInfo.current_time);\n        console.log(\"\\uD83D\\uDDC4️ Database:\", connectionInfo.database_name);\n        console.log(\"\\uD83D\\uDC64 User:\", connectionInfo.current_user);\n        console.log(\"\\uD83C\\uDF10 Server IP:\", connectionInfo.server_ip || \"Unix Socket\");\n        console.log(\"\\uD83D\\uDCCA PostgreSQL version:\", connectionInfo.postgres_version);\n        return {\n            success: true,\n            data: connectionInfo\n        };\n    } catch (error) {\n        console.error(\"❌ Database connection failed:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        // Provide helpful error messages\n        if (errorMessage.includes(\"ECONNREFUSED\")) {\n            console.error(\"\\uD83D\\uDCA1 Tip: Make sure your Google Cloud SQL instance is running and accessible\");\n        }\n        if (errorMessage.includes(\"password authentication failed\")) {\n            console.error(\"\\uD83D\\uDCA1 Tip: Check your database username and password\");\n        }\n        if (errorMessage.includes(\"database\") && errorMessage.includes(\"does not exist\")) {\n            console.error(\"\\uD83D\\uDCA1 Tip: Make sure the 'corp' database exists in your instance\");\n        }\n        return {\n            success: false,\n            error: errorMessage\n        };\n    }\n}\n// Execute a query with error handling\nasync function query(text, params) {\n    const start = Date.now();\n    try {\n        console.log(\"\\uD83D\\uDD0D Executing query:\", text.substring(0, 100) + (text.length > 100 ? \"...\" : \"\"));\n        const result = await pool.query(text, params);\n        const duration = Date.now() - start;\n        console.log(`✅ Query executed in ${duration}ms, returned ${result.rowCount} rows`);\n        return result;\n    } catch (error) {\n        const duration = Date.now() - start;\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        console.error(`❌ Query failed after ${duration}ms:`, errorMessage);\n        console.error(\"\\uD83D\\uDCDD Query:\", text.substring(0, 200));\n        console.error(\"\\uD83D\\uDCCB Params:\", params);\n        throw error;\n    }\n}\n// Get a client from the pool for transactions\nasync function getClient() {\n    return await pool.connect();\n}\n// Close the pool (for graceful shutdown)\nasync function closePool() {\n    await pool.end();\n    console.log(\"\\uD83D\\uDD12 Database pool closed\");\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsettings%2Forganization%2Froute&page=%2Fapi%2Fsettings%2Forganization%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsettings%2Forganization%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();