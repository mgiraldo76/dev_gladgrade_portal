"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/settings/departments/route";
exports.ids = ["app/api/settings/departments/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

module.exports = import("pg");;

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsettings%2Fdepartments%2Froute&page=%2Fapi%2Fsettings%2Fdepartments%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsettings%2Fdepartments%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsettings%2Fdepartments%2Froute&page=%2Fapi%2Fsettings%2Fdepartments%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsettings%2Fdepartments%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_settings_departments_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/settings/departments/route.ts */ \"(rsc)/./app/api/settings/departments/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_settings_departments_route_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_settings_departments_route_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/settings/departments/route\",\n        pathname: \"/api/settings/departments\",\n        filename: \"route\",\n        bundlePath: \"app/api/settings/departments/route\"\n    },\n    resolvedPagePath: \"/Users/miguelgiraldo/DEVSPACE/dev_gladgrade_portal/app/api/settings/departments/route.ts\",\n    nextConfigOutput,\n    userland: _Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_settings_departments_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/settings/departments/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzZXR0aW5ncyUyRmRlcGFydG1lbnRzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZzZXR0aW5ncyUyRmRlcGFydG1lbnRzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGc2V0dGluZ3MlMkZkZXBhcnRtZW50cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm1pZ3VlbGdpcmFsZG8lMkZERVZTUEFDRSUyRmRldl9nbGFkZ3JhZGVfcG9ydGFsJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRm1pZ3VlbGdpcmFsZG8lMkZERVZTUEFDRSUyRmRldl9nbGFkZ3JhZGVfcG9ydGFsJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN3QztBQUNySDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvP2QyYjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL21pZ3VlbGdpcmFsZG8vREVWU1BBQ0UvZGV2X2dsYWRncmFkZV9wb3J0YWwvYXBwL2FwaS9zZXR0aW5ncy9kZXBhcnRtZW50cy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc2V0dGluZ3MvZGVwYXJ0bWVudHMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zZXR0aW5ncy9kZXBhcnRtZW50c1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc2V0dGluZ3MvZGVwYXJ0bWVudHMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvbWlndWVsZ2lyYWxkby9ERVZTUEFDRS9kZXZfZ2xhZGdyYWRlX3BvcnRhbC9hcHAvYXBpL3NldHRpbmdzL2RlcGFydG1lbnRzL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9zZXR0aW5ncy9kZXBhcnRtZW50cy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsettings%2Fdepartments%2Froute&page=%2Fapi%2Fsettings%2Fdepartments%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsettings%2Fdepartments%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/settings/departments/route.ts":
/*!***********************************************!*\
  !*** ./app/api/settings/departments/route.ts ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./lib/database.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_database__WEBPACK_IMPORTED_MODULE_1__]);\n_lib_database__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// Mock data for demonstration\nconst mockDepartments = [\n    {\n        id: 1,\n        name: \"Content Moderation\",\n        employee_count: 8,\n        permissions: [\n            \"content_moderation\",\n            \"review_management\",\n            \"image_approval\"\n        ],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n    },\n    {\n        id: 2,\n        name: \"Customer Support\",\n        employee_count: 12,\n        permissions: [\n            \"customer_support\",\n            \"basic_reports\"\n        ],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n    },\n    {\n        id: 3,\n        name: \"Operations\",\n        employee_count: 5,\n        permissions: [\n            \"full_access\",\n            \"system_admin\",\n            \"user_management\"\n        ],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n    }\n];\n// GET /api/settings/departments\nasync function GET() {\n    try {\n        console.log(\"\\uD83D\\uDCCA Fetching departments from PostgreSQL...\");\n        const result = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(`\n      SELECT\n        d.id,\n        d.name,\n        d.employee_count,\n        d.created_at,\n        d.updated_at,\n        COALESCE(\n          ARRAY_AGG(p.name) FILTER (WHERE p.name IS NOT NULL), \n          ARRAY[]::text[]\n        ) as permissions\n      FROM departments d\n      LEFT JOIN department_permissions dp ON d.id = dp.department_id\n      LEFT JOIN permissions p ON dp.permission_id = p.id\n      GROUP BY d.id, d.name, d.employee_count, d.created_at, d.updated_at\n      ORDER BY d.name\n    `);\n        console.log(`✅ Found ${result.rows.length} departments`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: result.rows\n        });\n    } catch (error) {\n        console.error(\"❌ Error fetching departments:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to fetch departments from database\",\n            details: errorMessage\n        }, {\n            status: 500\n        });\n    }\n}\n// POST /api/settings/departments\nasync function POST(request) {\n    const client = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n    try {\n        const { name, employee_count = 0, permissions = [\n            \"basic_access\"\n        ] } = await request.json();\n        if (!name || name.trim() === \"\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Department name is required\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`🏢 Creating department: ${name} with ${permissions.length} permissions`);\n        await client.query(\"BEGIN\");\n        // Insert department\n        const deptResult = await client.query(\"INSERT INTO departments (name, employee_count) VALUES ($1, $2) RETURNING *\", [\n            name.trim(),\n            employee_count\n        ]);\n        const department = deptResult.rows[0];\n        // Insert permissions\n        for (const permName of permissions){\n            await client.query(`\n        INSERT INTO department_permissions (department_id, permission_id)\n        SELECT $1, id FROM permissions WHERE name = $2\n        ON CONFLICT (department_id, permission_id) DO NOTHING\n      `, [\n                department.id,\n                permName\n            ]);\n        }\n        await client.query(\"COMMIT\");\n        // Fetch the complete department with permissions\n        const completeResult = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(`\n      SELECT\n        d.id,\n        d.name,\n        d.employee_count,\n        d.created_at,\n        d.updated_at,\n        COALESCE(\n          ARRAY_AGG(p.name) FILTER (WHERE p.name IS NOT NULL), \n          ARRAY[]::text[]\n        ) as permissions\n      FROM departments d\n      LEFT JOIN department_permissions dp ON d.id = dp.department_id\n      LEFT JOIN permissions p ON dp.permission_id = p.id\n      WHERE d.id = $1\n      GROUP BY d.id, d.name, d.employee_count, d.created_at, d.updated_at\n    `, [\n            department.id\n        ]);\n        console.log(\"✅ Department created successfully:\", completeResult.rows[0]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: completeResult.rows[0]\n        });\n    } catch (error) {\n        await client.query(\"ROLLBACK\");\n        console.error(\"❌ Error creating department:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        const errorCode = error && typeof error === \"object\" && \"code\" in error ? error.code : null;\n        if (errorCode === \"23505\") {\n            // Unique constraint violation\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Department name already exists\"\n            }, {\n                status: 409\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to create department\",\n            details: errorMessage\n        }, {\n            status: 500\n        });\n    } finally{\n        client.release();\n    }\n}\n// PUT /api/settings/departments\nasync function PUT(request) {\n    const client = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n    try {\n        const { id, name, employee_count, permissions } = await request.json();\n        if (!id || !name || name.trim() === \"\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Department ID and name are required\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`🔄 Updating department ${id}: ${name}`);\n        await client.query(\"BEGIN\");\n        // Update department\n        await client.query(\"UPDATE departments SET name = $1, employee_count = $2, updated_at = CURRENT_TIMESTAMP WHERE id = $3\", [\n            name.trim(),\n            employee_count,\n            id\n        ]);\n        // Update permissions - remove all existing and add new ones\n        await client.query(\"DELETE FROM department_permissions WHERE department_id = $1\", [\n            id\n        ]);\n        for (const permName of permissions){\n            await client.query(`\n        INSERT INTO department_permissions (department_id, permission_id)\n        SELECT $1, id FROM permissions WHERE name = $2\n        ON CONFLICT (department_id, permission_id) DO NOTHING\n      `, [\n                id,\n                permName\n            ]);\n        }\n        await client.query(\"COMMIT\");\n        // Fetch the updated department with permissions\n        const result = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(`\n      SELECT\n        d.id,\n        d.name,\n        d.employee_count,\n        d.created_at,\n        d.updated_at,\n        COALESCE(\n          ARRAY_AGG(p.name) FILTER (WHERE p.name IS NOT NULL), \n          ARRAY[]::text[]\n        ) as permissions\n      FROM departments d\n      LEFT JOIN department_permissions dp ON d.id = dp.department_id\n      LEFT JOIN permissions p ON dp.permission_id = p.id\n      WHERE d.id = $1\n      GROUP BY d.id, d.name, d.employee_count, d.created_at, d.updated_at\n    `, [\n            id\n        ]);\n        if (result.rows.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Department not found\"\n            }, {\n                status: 404\n            });\n        }\n        console.log(\"✅ Department updated successfully:\", result.rows[0]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: result.rows[0]\n        });\n    } catch (error) {\n        await client.query(\"ROLLBACK\");\n        console.error(\"❌ Error updating department:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to update department\",\n            details: errorMessage\n        }, {\n            status: 500\n        });\n    } finally{\n        client.release();\n    }\n}\n// DELETE /api/settings/departments/[id]\nasync function DELETE(request) {\n    try {\n        const url = new URL(request.url);\n        const id = Number.parseInt(url.searchParams.get(\"id\") || \"0\");\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Department ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`🗑️ Deleting department ${id}`);\n        // Get department info before deletion\n        const deptResult = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(\"SELECT * FROM departments WHERE id = $1\", [\n            id\n        ]);\n        if (deptResult.rows.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Department not found\"\n            }, {\n                status: 404\n            });\n        }\n        const department = deptResult.rows[0];\n        // Delete department (CASCADE will handle department_permissions)\n        await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(\"DELETE FROM departments WHERE id = $1\", [\n            id\n        ]);\n        console.log(\"✅ Department deleted successfully:\", department);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: department\n        });\n    } catch (error) {\n        console.error(\"❌ Error deleting department:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to delete department\",\n            details: errorMessage\n        }, {\n            status: 500\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/settings/departments/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closePool: () => (/* binding */ closePool),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getClient: () => (/* binding */ getClient),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   testConnection: () => (/* binding */ testConnection)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([pg__WEBPACK_IMPORTED_MODULE_0__]);\npg__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Determine connection method based on environment\nconst isProduction = \"development\" === \"production\";\nconst isGoogleCloud = process.env.GOOGLE_CLOUD_PROJECT || process.env.FIREBASE_PROJECT_ID;\n// Database connection configuration\nconst dbConfig = (()=>{\n    // Method 1: Unix Socket (for Google Cloud Run/App Engine)\n    if (isProduction && isGoogleCloud) {\n        console.log(\"\\uD83D\\uDD17 Using Unix Socket connection for Google Cloud\");\n        return {\n            host: `/cloudsql/${process.env.FIREBASE_PROJECT_ID}:us-east4:gg-instance`,\n            database: process.env.DB_NAME || \"corp\",\n            user: process.env.DB_USER || \"postgres\",\n            password: process.env.DB_PASSWORD,\n            ssl: false,\n            max: 20,\n            idleTimeoutMillis: 30000,\n            connectionTimeoutMillis: 10000\n        };\n    }\n    // Method 2: Public IP (for local development)\n    console.log(\"\\uD83D\\uDD17 Using Public IP connection for local development\");\n    return {\n        host: process.env.DB_HOST || \"34.86.121.148\",\n        port: Number.parseInt(process.env.DB_PORT || \"5432\"),\n        database: process.env.DB_NAME || \"corp\",\n        user: process.env.DB_USER || \"postgres\",\n        password: process.env.DB_PASSWORD,\n        ssl: {\n            rejectUnauthorized: false\n        },\n        max: 20,\n        idleTimeoutMillis: 30000,\n        connectionTimeoutMillis: 10000\n    };\n})();\n// Create connection pool\nconst pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool(dbConfig);\n// Handle pool errors\npool.on(\"error\", (err)=>{\n    console.error(\"❌ Unexpected error on idle client\", err);\n    process.exit(-1);\n});\n// Log connection details (without password)\nconsole.log(\"\\uD83D\\uDD27 Database Configuration:\", {\n    host: dbConfig.host,\n    port: dbConfig.port || \"Unix Socket\",\n    database: dbConfig.database,\n    user: dbConfig.user,\n    ssl: !!dbConfig.ssl,\n    environment: \"development\",\n    isGoogleCloud: !!isGoogleCloud\n});\n// Test database connection\nasync function testConnection() {\n    try {\n        console.log(\"\\uD83E\\uDDEA Testing database connection...\");\n        const client = await pool.connect();\n        const result = await client.query(`\n      SELECT \n        NOW() as current_time, \n        version() as postgres_version,\n        current_database() as database_name,\n        current_user as current_user,\n        inet_server_addr() as server_ip\n    `);\n        client.release();\n        const connectionInfo = result.rows[0];\n        console.log(\"✅ Database connected successfully!\");\n        console.log(\"\\uD83D\\uDD50 Current time:\", connectionInfo.current_time);\n        console.log(\"\\uD83D\\uDDC4️ Database:\", connectionInfo.database_name);\n        console.log(\"\\uD83D\\uDC64 User:\", connectionInfo.current_user);\n        console.log(\"\\uD83C\\uDF10 Server IP:\", connectionInfo.server_ip || \"Unix Socket\");\n        console.log(\"\\uD83D\\uDCCA PostgreSQL version:\", connectionInfo.postgres_version);\n        return {\n            success: true,\n            data: connectionInfo\n        };\n    } catch (error) {\n        console.error(\"❌ Database connection failed:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        // Provide helpful error messages\n        if (errorMessage.includes(\"ECONNREFUSED\")) {\n            console.error(\"\\uD83D\\uDCA1 Tip: Make sure your Google Cloud SQL instance is running and accessible\");\n        }\n        if (errorMessage.includes(\"password authentication failed\")) {\n            console.error(\"\\uD83D\\uDCA1 Tip: Check your database username and password\");\n        }\n        if (errorMessage.includes(\"database\") && errorMessage.includes(\"does not exist\")) {\n            console.error(\"\\uD83D\\uDCA1 Tip: Make sure the 'corp' database exists in your instance\");\n        }\n        return {\n            success: false,\n            error: errorMessage\n        };\n    }\n}\n// Execute a query with error handling\nasync function query(text, params) {\n    const start = Date.now();\n    try {\n        console.log(\"\\uD83D\\uDD0D Executing query:\", text.substring(0, 100) + (text.length > 100 ? \"...\" : \"\"));\n        const result = await pool.query(text, params);\n        const duration = Date.now() - start;\n        console.log(`✅ Query executed in ${duration}ms, returned ${result.rowCount} rows`);\n        return result;\n    } catch (error) {\n        const duration = Date.now() - start;\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        console.error(`❌ Query failed after ${duration}ms:`, errorMessage);\n        console.error(\"\\uD83D\\uDCDD Query:\", text.substring(0, 200));\n        console.error(\"\\uD83D\\uDCCB Params:\", params);\n        throw error;\n    }\n}\n// Get a client from the pool for transactions\nasync function getClient() {\n    return await pool.connect();\n}\n// Close the pool (for graceful shutdown)\nasync function closePool() {\n    await pool.end();\n    console.log(\"\\uD83D\\uDD12 Database pool closed\");\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsettings%2Fdepartments%2Froute&page=%2Fapi%2Fsettings%2Fdepartments%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsettings%2Fdepartments%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();