"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/clients/route";
exports.ids = ["app/api/clients/route"];
exports.modules = {

/***/ "firebase-admin":
/*!*********************************!*\
  !*** external "firebase-admin" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("firebase-admin");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

module.exports = import("pg");;

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclients%2Froute&page=%2Fapi%2Fclients%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclients%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclients%2Froute&page=%2Fapi%2Fclients%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclients%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_clients_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/clients/route.ts */ \"(rsc)/./app/api/clients/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_clients_route_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_clients_route_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/clients/route\",\n        pathname: \"/api/clients\",\n        filename: \"route\",\n        bundlePath: \"app/api/clients/route\"\n    },\n    resolvedPagePath: \"/Users/miguelgiraldo/DEVSPACE/dev_gladgrade_portal/app/api/clients/route.ts\",\n    nextConfigOutput,\n    userland: _Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_clients_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/clients/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjbGllbnRzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjbGllbnRzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2xpZW50cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm1pZ3VlbGdpcmFsZG8lMkZERVZTUEFDRSUyRmRldl9nbGFkZ3JhZGVfcG9ydGFsJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRm1pZ3VlbGdpcmFsZG8lMkZERVZTUEFDRSUyRmRldl9nbGFkZ3JhZGVfcG9ydGFsJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMyQjtBQUN4RztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvP2YwZDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL21pZ3VlbGdpcmFsZG8vREVWU1BBQ0UvZGV2X2dsYWRncmFkZV9wb3J0YWwvYXBwL2FwaS9jbGllbnRzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jbGllbnRzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY2xpZW50c1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvY2xpZW50cy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9taWd1ZWxnaXJhbGRvL0RFVlNQQUNFL2Rldl9nbGFkZ3JhZGVfcG9ydGFsL2FwcC9hcGkvY2xpZW50cy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY2xpZW50cy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclients%2Froute&page=%2Fapi%2Fclients%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclients%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/clients/route.ts":
/*!**********************************!*\
  !*** ./app/api/clients/route.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./lib/database.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_database__WEBPACK_IMPORTED_MODULE_1__]);\n_lib_database__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// Import Firebase functions with error handling\nlet createFirebaseUser = null;\nlet setCustomClaims = null;\ntry {\n    const firebaseAdmin = __webpack_require__(/*! @/lib/firebase-admin */ \"(rsc)/./lib/firebase-admin.ts\");\n    createFirebaseUser = firebaseAdmin.createFirebaseUser;\n    setCustomClaims = firebaseAdmin.setCustomClaims;\n} catch (error) {\n    console.log(\"⚠️ Firebase Admin functions not available, using database-only mode\");\n}\n// Helper function to generate temporary password\nfunction generateTemporaryPassword() {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%\";\n    let password = \"\";\n    for(let i = 0; i < 12; i++){\n        password += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return password;\n}\n// GET /api/clients - Get all business clients from corp.business_clients\nasync function GET() {\n    try {\n        console.log(\"\\uD83C\\uDFE2 Fetching business clients from corp.business_clients...\");\n        const result = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(`\n      SELECT\n        bc.id,\n        bc.business_name as businessname,\n        bc.contact_name,\n        bc.contact_email,\n        bc.phone,\n        bc.website,\n        bc.business_address,\n        bc.claim_status,\n        bc.claim_method,\n        bc.security_level,\n        bc.verification_status,\n        bc.gcsg_score,\n        bc.monthly_reviews,\n        bc.total_reviews,\n        bc.average_rating,\n        bc.subscription_plan,\n        bc.subscription_status,\n        bc.onboarding_completed,\n        bc.lead_source,\n        bc.lead_status,\n        bc.created_at as datecreated,\n        bc.updated_at as lastupdated,\n        bc.last_login,\n        -- Industry category\n        ic.name as industry_category_name,\n        ic.icon as industry_icon,\n        -- Sales representative\n        emp.full_name as sales_rep_name,\n        emp.email as sales_rep_email,\n        emp.id as sales_rep_id,\n        dept.name as sales_rep_department,\n        -- Status indicators\n        CASE \n          WHEN bc.firebase_uid IS NOT NULL THEN true\n          ELSE false\n        END as has_firebase_account,\n        CASE \n          WHEN bc.verification_status = 'verified' THEN true\n          ELSE false\n        END as isverified,\n        CASE \n          WHEN bc.security_level IN ('verified', 'pending') THEN true\n          ELSE false\n        END as isactive\n      FROM business_clients bc\n      LEFT JOIN industry_categories ic ON bc.industry_category_id = ic.id\n      LEFT JOIN employees emp ON bc.sales_rep_id = emp.id\n      LEFT JOIN departments dept ON emp.department_id = dept.id\n      ORDER BY bc.created_at DESC\n    `);\n        console.log(`✅ Found ${result.rows.length} business clients from corp database`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: result.rows\n        });\n    } catch (error) {\n        console.error(\"❌ Error fetching business clients:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to fetch business clients from corp database\",\n            details: errorMessage\n        }, {\n            status: 500\n        });\n    }\n}\n// POST /api/clients - Create client user for existing business\nasync function POST(request) {\n    const client = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n    try {\n        const { business_id, user_email, user_name, user_role = \"client_admin\", create_firebase_account = true, temporary_password } = await request.json();\n        if (!business_id || !user_email || !user_name) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Business ID, user email, and name are required\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`👤 Creating client user for business ID: ${business_id}`);\n        await client.query(\"BEGIN\");\n        // Get business details from corp.business_clients\n        const businessResult = await client.query(\"SELECT * FROM business_clients WHERE id = $1\", [\n            business_id\n        ]);\n        if (businessResult.rows.length === 0) {\n            await client.query(\"ROLLBACK\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Business client not found\"\n            }, {\n                status: 404\n            });\n        }\n        const business = businessResult.rows[0];\n        let firebaseUid = null;\n        let firebaseAccountCreated = false;\n        // Create Firebase user if requested and available\n        if (create_firebase_account && createFirebaseUser) {\n            try {\n                console.log(\"\\uD83D\\uDD25 Creating Firebase Authentication user for client...\");\n                const firebaseUser = await createFirebaseUser({\n                    email: user_email.toLowerCase().trim(),\n                    displayName: user_name.trim(),\n                    password: temporary_password || generateTemporaryPassword(),\n                    emailVerified: false\n                });\n                firebaseUid = firebaseUser.uid;\n                firebaseAccountCreated = true;\n                console.log(`✅ Firebase user created with UID: ${firebaseUid}`);\n                // Set custom claims for client access\n                if (setCustomClaims) {\n                    await setCustomClaims(firebaseUid, {\n                        role: \"client\",\n                        business_id: business_id,\n                        business_name: business.business_name,\n                        user_role: user_role,\n                        permissions: [\n                            \"client_access\",\n                            \"view_reports\",\n                            \"manage_reviews\",\n                            \"manage_ads\"\n                        ]\n                    });\n                    console.log(`✅ Custom claims set for Firebase client user`);\n                }\n            } catch (firebaseError) {\n                await client.query(\"ROLLBACK\");\n                const errorMessage = firebaseError instanceof Error ? firebaseError.message : \"Unknown Firebase error\";\n                console.error(\"❌ Firebase user creation failed:\", errorMessage);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: \"Failed to create Firebase user for client\",\n                    details: errorMessage\n                }, {\n                    status: 500\n                });\n            }\n        }\n        // Update business_clients record with Firebase UID\n        await client.query(`UPDATE business_clients \n       SET firebase_uid = $1, updated_at = NOW() \n       WHERE id = $2`, [\n            firebaseUid,\n            business_id\n        ]);\n        await client.query(\"COMMIT\");\n        console.log(\"✅ Client user created successfully for business:\", business.business_name);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: {\n                business: business,\n                firebase_account_created: firebaseAccountCreated,\n                firebase_uid: firebaseUid,\n                temporary_password: firebaseAccountCreated ? temporary_password || \"Auto-generated\" : null\n            },\n            login_instructions: firebaseAccountCreated ? \"The client can now log in at portal.gladgrade.com with their email and password\" : \"Database record updated. Firebase account can be created later.\"\n        });\n    } catch (error) {\n        await client.query(\"ROLLBACK\");\n        console.error(\"❌ Error creating client user:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        const errorCode = error && typeof error === \"object\" && \"code\" in error ? error.code : null;\n        if (errorCode === \"23505\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"User email already exists\"\n            }, {\n                status: 409\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to create client user\",\n            details: errorMessage\n        }, {\n            status: 500\n        });\n    } finally{\n        client.release();\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QixTQUFTVyxhQUFhO1FBRXRGLE9BQU9uRCxxREFBWUEsQ0FBQ3NCLElBQUksQ0FBQztZQUN2QkMsU0FBUztZQUNUQyxNQUFNO2dCQUNKZ0IsVUFBVUE7Z0JBQ1ZjLDBCQUEwQlo7Z0JBQzFCYSxjQUFjZDtnQkFDZEgsb0JBQW9CSSx5QkFBeUJKLHNCQUFzQixtQkFBbUI7WUFDeEY7WUFDQWtCLG9CQUFvQmQseUJBQ2hCLG9GQUNBO1FBQ047SUFDRixFQUFFLE9BQU9uQyxPQUFnQjtRQUN2QixNQUFNeUIsT0FBTy9CLEtBQUssQ0FBQztRQUNuQk8sUUFBUUQsS0FBSyxDQUFDLGlDQUFpQ0E7UUFFL0MsTUFBTWtCLGVBQWVsQixpQkFBaUJtQixRQUFRbkIsTUFBTW9CLE9BQU8sR0FBRztRQUM5RCxNQUFNOEIsWUFBWWxELFNBQVMsT0FBT0EsVUFBVSxZQUFZLFVBQVVBLFFBQVEsTUFBZW1ELElBQUksR0FBRztRQUVoRyxJQUFJRCxjQUFjLFNBQVM7WUFDekIsT0FBT3pELHFEQUFZQSxDQUFDc0IsSUFBSSxDQUFDO2dCQUFFQyxTQUFTO2dCQUFPaEIsT0FBTztZQUE0QixHQUFHO2dCQUFFc0IsUUFBUTtZQUFJO1FBQ2pHO1FBRUEsT0FBTzdCLHFEQUFZQSxDQUFDc0IsSUFBSSxDQUN0QjtZQUNFQyxTQUFTO1lBQ1RoQixPQUFPO1lBQ1BxQixTQUFTSDtRQUNYLEdBQ0E7WUFBRUksUUFBUTtRQUFJO0lBRWxCLFNBQVU7UUFDUkcsT0FBTzJCLE9BQU87SUFDaEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9hcHAvYXBpL2NsaWVudHMvcm91dGUudHM/NjBkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0eXBlIE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIlxuaW1wb3J0IHsgcXVlcnksIGdldENsaWVudCB9IGZyb20gXCJAL2xpYi9kYXRhYmFzZVwiXG5cbi8vIEltcG9ydCBGaXJlYmFzZSBmdW5jdGlvbnMgd2l0aCBlcnJvciBoYW5kbGluZ1xubGV0IGNyZWF0ZUZpcmViYXNlVXNlcjogYW55ID0gbnVsbFxubGV0IHNldEN1c3RvbUNsYWltczogYW55ID0gbnVsbFxuXG50cnkge1xuICBjb25zdCBmaXJlYmFzZUFkbWluID0gcmVxdWlyZShcIkAvbGliL2ZpcmViYXNlLWFkbWluXCIpXG4gIGNyZWF0ZUZpcmViYXNlVXNlciA9IGZpcmViYXNlQWRtaW4uY3JlYXRlRmlyZWJhc2VVc2VyXG4gIHNldEN1c3RvbUNsYWltcyA9IGZpcmViYXNlQWRtaW4uc2V0Q3VzdG9tQ2xhaW1zXG59IGNhdGNoIChlcnJvcikge1xuICBjb25zb2xlLmxvZyhcIuKaoO+4jyBGaXJlYmFzZSBBZG1pbiBmdW5jdGlvbnMgbm90IGF2YWlsYWJsZSwgdXNpbmcgZGF0YWJhc2Utb25seSBtb2RlXCIpXG59XG5cbi8vIEhlbHBlciBmdW5jdGlvbiB0byBnZW5lcmF0ZSB0ZW1wb3JhcnkgcGFzc3dvcmRcbmZ1bmN0aW9uIGdlbmVyYXRlVGVtcG9yYXJ5UGFzc3dvcmQoKTogc3RyaW5nIHtcbiAgY29uc3QgY2hhcnMgPSBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5IUAjJCVcIlxuICBsZXQgcGFzc3dvcmQgPSBcIlwiXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMTI7IGkrKykge1xuICAgIHBhc3N3b3JkICs9IGNoYXJzLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFycy5sZW5ndGgpKVxuICB9XG4gIHJldHVybiBwYXNzd29yZFxufVxuXG4vLyBHRVQgL2FwaS9jbGllbnRzIC0gR2V0IGFsbCBidXNpbmVzcyBjbGllbnRzIGZyb20gY29ycC5idXNpbmVzc19jbGllbnRzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKCkge1xuICB0cnkge1xuICAgIGNvbnNvbGUubG9nKFwi8J+PoiBGZXRjaGluZyBidXNpbmVzcyBjbGllbnRzIGZyb20gY29ycC5idXNpbmVzc19jbGllbnRzLi4uXCIpXG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBxdWVyeShgXG4gICAgICBTRUxFQ1RcbiAgICAgICAgYmMuaWQsXG4gICAgICAgIGJjLmJ1c2luZXNzX25hbWUgYXMgYnVzaW5lc3NuYW1lLFxuICAgICAgICBiYy5jb250YWN0X25hbWUsXG4gICAgICAgIGJjLmNvbnRhY3RfZW1haWwsXG4gICAgICAgIGJjLnBob25lLFxuICAgICAgICBiYy53ZWJzaXRlLFxuICAgICAgICBiYy5idXNpbmVzc19hZGRyZXNzLFxuICAgICAgICBiYy5jbGFpbV9zdGF0dXMsXG4gICAgICAgIGJjLmNsYWltX21ldGhvZCxcbiAgICAgICAgYmMuc2VjdXJpdHlfbGV2ZWwsXG4gICAgICAgIGJjLnZlcmlmaWNhdGlvbl9zdGF0dXMsXG4gICAgICAgIGJjLmdjc2dfc2NvcmUsXG4gICAgICAgIGJjLm1vbnRobHlfcmV2aWV3cyxcbiAgICAgICAgYmMudG90YWxfcmV2aWV3cyxcbiAgICAgICAgYmMuYXZlcmFnZV9yYXRpbmcsXG4gICAgICAgIGJjLnN1YnNjcmlwdGlvbl9wbGFuLFxuICAgICAgICBiYy5zdWJzY3JpcHRpb25fc3RhdHVzLFxuICAgICAgICBiYy5vbmJvYXJkaW5nX2NvbXBsZXRlZCxcbiAgICAgICAgYmMubGVhZF9zb3VyY2UsXG4gICAgICAgIGJjLmxlYWRfc3RhdHVzLFxuICAgICAgICBiYy5jcmVhdGVkX2F0IGFzIGRhdGVjcmVhdGVkLFxuICAgICAgICBiYy51cGRhdGVkX2F0IGFzIGxhc3R1cGRhdGVkLFxuICAgICAgICBiYy5sYXN0X2xvZ2luLFxuICAgICAgICAtLSBJbmR1c3RyeSBjYXRlZ29yeVxuICAgICAgICBpYy5uYW1lIGFzIGluZHVzdHJ5X2NhdGVnb3J5X25hbWUsXG4gICAgICAgIGljLmljb24gYXMgaW5kdXN0cnlfaWNvbixcbiAgICAgICAgLS0gU2FsZXMgcmVwcmVzZW50YXRpdmVcbiAgICAgICAgZW1wLmZ1bGxfbmFtZSBhcyBzYWxlc19yZXBfbmFtZSxcbiAgICAgICAgZW1wLmVtYWlsIGFzIHNhbGVzX3JlcF9lbWFpbCxcbiAgICAgICAgZW1wLmlkIGFzIHNhbGVzX3JlcF9pZCxcbiAgICAgICAgZGVwdC5uYW1lIGFzIHNhbGVzX3JlcF9kZXBhcnRtZW50LFxuICAgICAgICAtLSBTdGF0dXMgaW5kaWNhdG9yc1xuICAgICAgICBDQVNFIFxuICAgICAgICAgIFdIRU4gYmMuZmlyZWJhc2VfdWlkIElTIE5PVCBOVUxMIFRIRU4gdHJ1ZVxuICAgICAgICAgIEVMU0UgZmFsc2VcbiAgICAgICAgRU5EIGFzIGhhc19maXJlYmFzZV9hY2NvdW50LFxuICAgICAgICBDQVNFIFxuICAgICAgICAgIFdIRU4gYmMudmVyaWZpY2F0aW9uX3N0YXR1cyA9ICd2ZXJpZmllZCcgVEhFTiB0cnVlXG4gICAgICAgICAgRUxTRSBmYWxzZVxuICAgICAgICBFTkQgYXMgaXN2ZXJpZmllZCxcbiAgICAgICAgQ0FTRSBcbiAgICAgICAgICBXSEVOIGJjLnNlY3VyaXR5X2xldmVsIElOICgndmVyaWZpZWQnLCAncGVuZGluZycpIFRIRU4gdHJ1ZVxuICAgICAgICAgIEVMU0UgZmFsc2VcbiAgICAgICAgRU5EIGFzIGlzYWN0aXZlXG4gICAgICBGUk9NIGJ1c2luZXNzX2NsaWVudHMgYmNcbiAgICAgIExFRlQgSk9JTiBpbmR1c3RyeV9jYXRlZ29yaWVzIGljIE9OIGJjLmluZHVzdHJ5X2NhdGVnb3J5X2lkID0gaWMuaWRcbiAgICAgIExFRlQgSk9JTiBlbXBsb3llZXMgZW1wIE9OIGJjLnNhbGVzX3JlcF9pZCA9IGVtcC5pZFxuICAgICAgTEVGVCBKT0lOIGRlcGFydG1lbnRzIGRlcHQgT04gZW1wLmRlcGFydG1lbnRfaWQgPSBkZXB0LmlkXG4gICAgICBPUkRFUiBCWSBiYy5jcmVhdGVkX2F0IERFU0NcbiAgICBgKVxuXG4gICAgY29uc29sZS5sb2coYOKchSBGb3VuZCAke3Jlc3VsdC5yb3dzLmxlbmd0aH0gYnVzaW5lc3MgY2xpZW50cyBmcm9tIGNvcnAgZGF0YWJhc2VgKVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhOiByZXN1bHQucm93cyxcbiAgICB9KVxuICB9IGNhdGNoIChlcnJvcjogdW5rbm93bikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCLinYwgRXJyb3IgZmV0Y2hpbmcgYnVzaW5lc3MgY2xpZW50czpcIiwgZXJyb3IpXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBcIlVua25vd24gZXJyb3Igb2NjdXJyZWRcIlxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiBcIkZhaWxlZCB0byBmZXRjaCBidXNpbmVzcyBjbGllbnRzIGZyb20gY29ycCBkYXRhYmFzZVwiLFxuICAgICAgICBkZXRhaWxzOiBlcnJvck1lc3NhZ2UsXG4gICAgICB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9LFxuICAgIClcbiAgfVxufVxuXG4vLyBQT1NUIC9hcGkvY2xpZW50cyAtIENyZWF0ZSBjbGllbnQgdXNlciBmb3IgZXhpc3RpbmcgYnVzaW5lc3NcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIGNvbnN0IGNsaWVudCA9IGF3YWl0IGdldENsaWVudCgpXG5cbiAgdHJ5IHtcbiAgICBjb25zdCB7XG4gICAgICBidXNpbmVzc19pZCxcbiAgICAgIHVzZXJfZW1haWwsXG4gICAgICB1c2VyX25hbWUsXG4gICAgICB1c2VyX3JvbGUgPSBcImNsaWVudF9hZG1pblwiLFxuICAgICAgY3JlYXRlX2ZpcmViYXNlX2FjY291bnQgPSB0cnVlLFxuICAgICAgdGVtcG9yYXJ5X3Bhc3N3b3JkLFxuICAgIH0gPSBhd2FpdCByZXF1ZXN0Lmpzb24oKVxuXG4gICAgaWYgKCFidXNpbmVzc19pZCB8fCAhdXNlcl9lbWFpbCB8fCAhdXNlcl9uYW1lKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiBcIkJ1c2luZXNzIElELCB1c2VyIGVtYWlsLCBhbmQgbmFtZSBhcmUgcmVxdWlyZWRcIiB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH0sXG4gICAgICApXG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coYPCfkaQgQ3JlYXRpbmcgY2xpZW50IHVzZXIgZm9yIGJ1c2luZXNzIElEOiAke2J1c2luZXNzX2lkfWApXG5cbiAgICBhd2FpdCBjbGllbnQucXVlcnkoXCJCRUdJTlwiKVxuXG4gICAgLy8gR2V0IGJ1c2luZXNzIGRldGFpbHMgZnJvbSBjb3JwLmJ1c2luZXNzX2NsaWVudHNcbiAgICBjb25zdCBidXNpbmVzc1Jlc3VsdCA9IGF3YWl0IGNsaWVudC5xdWVyeShcIlNFTEVDVCAqIEZST00gYnVzaW5lc3NfY2xpZW50cyBXSEVSRSBpZCA9ICQxXCIsIFtidXNpbmVzc19pZF0pXG5cbiAgICBpZiAoYnVzaW5lc3NSZXN1bHQucm93cy5sZW5ndGggPT09IDApIHtcbiAgICAgIGF3YWl0IGNsaWVudC5xdWVyeShcIlJPTExCQUNLXCIpXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IFwiQnVzaW5lc3MgY2xpZW50IG5vdCBmb3VuZFwiIH0sIHsgc3RhdHVzOiA0MDQgfSlcbiAgICB9XG5cbiAgICBjb25zdCBidXNpbmVzcyA9IGJ1c2luZXNzUmVzdWx0LnJvd3NbMF1cblxuICAgIGxldCBmaXJlYmFzZVVpZCA9IG51bGxcbiAgICBsZXQgZmlyZWJhc2VBY2NvdW50Q3JlYXRlZCA9IGZhbHNlXG5cbiAgICAvLyBDcmVhdGUgRmlyZWJhc2UgdXNlciBpZiByZXF1ZXN0ZWQgYW5kIGF2YWlsYWJsZVxuICAgIGlmIChjcmVhdGVfZmlyZWJhc2VfYWNjb3VudCAmJiBjcmVhdGVGaXJlYmFzZVVzZXIpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwi8J+UpSBDcmVhdGluZyBGaXJlYmFzZSBBdXRoZW50aWNhdGlvbiB1c2VyIGZvciBjbGllbnQuLi5cIilcblxuICAgICAgICBjb25zdCBmaXJlYmFzZVVzZXIgPSBhd2FpdCBjcmVhdGVGaXJlYmFzZVVzZXIoe1xuICAgICAgICAgIGVtYWlsOiB1c2VyX2VtYWlsLnRvTG93ZXJDYXNlKCkudHJpbSgpLFxuICAgICAgICAgIGRpc3BsYXlOYW1lOiB1c2VyX25hbWUudHJpbSgpLFxuICAgICAgICAgIHBhc3N3b3JkOiB0ZW1wb3JhcnlfcGFzc3dvcmQgfHwgZ2VuZXJhdGVUZW1wb3JhcnlQYXNzd29yZCgpLFxuICAgICAgICAgIGVtYWlsVmVyaWZpZWQ6IGZhbHNlLFxuICAgICAgICB9KVxuXG4gICAgICAgIGZpcmViYXNlVWlkID0gZmlyZWJhc2VVc2VyLnVpZFxuICAgICAgICBmaXJlYmFzZUFjY291bnRDcmVhdGVkID0gdHJ1ZVxuICAgICAgICBjb25zb2xlLmxvZyhg4pyFIEZpcmViYXNlIHVzZXIgY3JlYXRlZCB3aXRoIFVJRDogJHtmaXJlYmFzZVVpZH1gKVxuXG4gICAgICAgIC8vIFNldCBjdXN0b20gY2xhaW1zIGZvciBjbGllbnQgYWNjZXNzXG4gICAgICAgIGlmIChzZXRDdXN0b21DbGFpbXMpIHtcbiAgICAgICAgICBhd2FpdCBzZXRDdXN0b21DbGFpbXMoZmlyZWJhc2VVaWQsIHtcbiAgICAgICAgICAgIHJvbGU6IFwiY2xpZW50XCIsXG4gICAgICAgICAgICBidXNpbmVzc19pZDogYnVzaW5lc3NfaWQsXG4gICAgICAgICAgICBidXNpbmVzc19uYW1lOiBidXNpbmVzcy5idXNpbmVzc19uYW1lLFxuICAgICAgICAgICAgdXNlcl9yb2xlOiB1c2VyX3JvbGUsXG4gICAgICAgICAgICBwZXJtaXNzaW9uczogW1wiY2xpZW50X2FjY2Vzc1wiLCBcInZpZXdfcmVwb3J0c1wiLCBcIm1hbmFnZV9yZXZpZXdzXCIsIFwibWFuYWdlX2Fkc1wiXSxcbiAgICAgICAgICB9KVxuXG4gICAgICAgICAgY29uc29sZS5sb2coYOKchSBDdXN0b20gY2xhaW1zIHNldCBmb3IgRmlyZWJhc2UgY2xpZW50IHVzZXJgKVxuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChmaXJlYmFzZUVycm9yOiB1bmtub3duKSB7XG4gICAgICAgIGF3YWl0IGNsaWVudC5xdWVyeShcIlJPTExCQUNLXCIpXG4gICAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGZpcmViYXNlRXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGZpcmViYXNlRXJyb3IubWVzc2FnZSA6IFwiVW5rbm93biBGaXJlYmFzZSBlcnJvclwiXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCLinYwgRmlyZWJhc2UgdXNlciBjcmVhdGlvbiBmYWlsZWQ6XCIsIGVycm9yTWVzc2FnZSlcblxuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAge1xuICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICBlcnJvcjogXCJGYWlsZWQgdG8gY3JlYXRlIEZpcmViYXNlIHVzZXIgZm9yIGNsaWVudFwiLFxuICAgICAgICAgICAgZGV0YWlsczogZXJyb3JNZXNzYWdlLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgeyBzdGF0dXM6IDUwMCB9LFxuICAgICAgICApXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gVXBkYXRlIGJ1c2luZXNzX2NsaWVudHMgcmVjb3JkIHdpdGggRmlyZWJhc2UgVUlEXG4gICAgYXdhaXQgY2xpZW50LnF1ZXJ5KFxuICAgICAgYFVQREFURSBidXNpbmVzc19jbGllbnRzIFxuICAgICAgIFNFVCBmaXJlYmFzZV91aWQgPSAkMSwgdXBkYXRlZF9hdCA9IE5PVygpIFxuICAgICAgIFdIRVJFIGlkID0gJDJgLFxuICAgICAgW2ZpcmViYXNlVWlkLCBidXNpbmVzc19pZF0sXG4gICAgKVxuXG4gICAgYXdhaXQgY2xpZW50LnF1ZXJ5KFwiQ09NTUlUXCIpXG5cbiAgICBjb25zb2xlLmxvZyhcIuKchSBDbGllbnQgdXNlciBjcmVhdGVkIHN1Y2Nlc3NmdWxseSBmb3IgYnVzaW5lc3M6XCIsIGJ1c2luZXNzLmJ1c2luZXNzX25hbWUpXG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgYnVzaW5lc3M6IGJ1c2luZXNzLFxuICAgICAgICBmaXJlYmFzZV9hY2NvdW50X2NyZWF0ZWQ6IGZpcmViYXNlQWNjb3VudENyZWF0ZWQsXG4gICAgICAgIGZpcmViYXNlX3VpZDogZmlyZWJhc2VVaWQsXG4gICAgICAgIHRlbXBvcmFyeV9wYXNzd29yZDogZmlyZWJhc2VBY2NvdW50Q3JlYXRlZCA/IHRlbXBvcmFyeV9wYXNzd29yZCB8fCBcIkF1dG8tZ2VuZXJhdGVkXCIgOiBudWxsLFxuICAgICAgfSxcbiAgICAgIGxvZ2luX2luc3RydWN0aW9uczogZmlyZWJhc2VBY2NvdW50Q3JlYXRlZFxuICAgICAgICA/IFwiVGhlIGNsaWVudCBjYW4gbm93IGxvZyBpbiBhdCBwb3J0YWwuZ2xhZGdyYWRlLmNvbSB3aXRoIHRoZWlyIGVtYWlsIGFuZCBwYXNzd29yZFwiXG4gICAgICAgIDogXCJEYXRhYmFzZSByZWNvcmQgdXBkYXRlZC4gRmlyZWJhc2UgYWNjb3VudCBjYW4gYmUgY3JlYXRlZCBsYXRlci5cIixcbiAgICB9KVxuICB9IGNhdGNoIChlcnJvcjogdW5rbm93bikge1xuICAgIGF3YWl0IGNsaWVudC5xdWVyeShcIlJPTExCQUNLXCIpXG4gICAgY29uc29sZS5lcnJvcihcIuKdjCBFcnJvciBjcmVhdGluZyBjbGllbnQgdXNlcjpcIiwgZXJyb3IpXG5cbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFwiVW5rbm93biBlcnJvciBvY2N1cnJlZFwiXG4gICAgY29uc3QgZXJyb3JDb2RlID0gZXJyb3IgJiYgdHlwZW9mIGVycm9yID09PSBcIm9iamVjdFwiICYmIFwiY29kZVwiIGluIGVycm9yID8gKGVycm9yIGFzIGFueSkuY29kZSA6IG51bGxcblxuICAgIGlmIChlcnJvckNvZGUgPT09IFwiMjM1MDVcIikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiBcIlVzZXIgZW1haWwgYWxyZWFkeSBleGlzdHNcIiB9LCB7IHN0YXR1czogNDA5IH0pXG4gICAgfVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IFwiRmFpbGVkIHRvIGNyZWF0ZSBjbGllbnQgdXNlclwiLFxuICAgICAgICBkZXRhaWxzOiBlcnJvck1lc3NhZ2UsXG4gICAgICB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9LFxuICAgIClcbiAgfSBmaW5hbGx5IHtcbiAgICBjbGllbnQucmVsZWFzZSgpXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJxdWVyeSIsImdldENsaWVudCIsImNyZWF0ZUZpcmViYXNlVXNlciIsInNldEN1c3RvbUNsYWltcyIsImZpcmViYXNlQWRtaW4iLCJyZXF1aXJlIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwiZ2VuZXJhdGVUZW1wb3JhcnlQYXNzd29yZCIsImNoYXJzIiwicGFzc3dvcmQiLCJpIiwiY2hhckF0IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibGVuZ3RoIiwiR0VUIiwicmVzdWx0Iiwicm93cyIsImpzb24iLCJzdWNjZXNzIiwiZGF0YSIsImVycm9yTWVzc2FnZSIsIkVycm9yIiwibWVzc2FnZSIsImRldGFpbHMiLCJzdGF0dXMiLCJQT1NUIiwicmVxdWVzdCIsImNsaWVudCIsImJ1c2luZXNzX2lkIiwidXNlcl9lbWFpbCIsInVzZXJfbmFtZSIsInVzZXJfcm9sZSIsImNyZWF0ZV9maXJlYmFzZV9hY2NvdW50IiwidGVtcG9yYXJ5X3Bhc3N3b3JkIiwiYnVzaW5lc3NSZXN1bHQiLCJidXNpbmVzcyIsImZpcmViYXNlVWlkIiwiZmlyZWJhc2VBY2NvdW50Q3JlYXRlZCIsImZpcmViYXNlVXNlciIsImVtYWlsIiwidG9Mb3dlckNhc2UiLCJ0cmltIiwiZGlzcGxheU5hbWUiLCJlbWFpbFZlcmlmaWVkIiwidWlkIiwicm9sZSIsImJ1c2luZXNzX25hbWUiLCJwZXJtaXNzaW9ucyIsImZpcmViYXNlRXJyb3IiLCJmaXJlYmFzZV9hY2NvdW50X2NyZWF0ZWQiLCJmaXJlYmFzZV91aWQiLCJsb2dpbl9pbnN0cnVjdGlvbnMiLCJlcnJvckNvZGUiLCJjb2RlIiwicmVsZWFzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/clients/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closePool: () => (/* binding */ closePool),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getClient: () => (/* binding */ getClient),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   testConnection: () => (/* binding */ testConnection)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([pg__WEBPACK_IMPORTED_MODULE_0__]);\npg__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Determine connection method based on environment\nconst isProduction = \"development\" === \"production\";\nconst isGoogleCloud = process.env.GOOGLE_CLOUD_PROJECT || process.env.FIREBASE_PROJECT_ID;\n// Database connection configuration\nconst dbConfig = (()=>{\n    // Method 1: Unix Socket (for Google Cloud Run/App Engine)\n    if (isProduction && isGoogleCloud) {\n        console.log(\"\\uD83D\\uDD17 Using Unix Socket connection for Google Cloud\");\n        return {\n            host: `/cloudsql/${process.env.FIREBASE_PROJECT_ID}:us-east4:gg-instance`,\n            database: process.env.DB_NAME || \"corp\",\n            user: process.env.DB_USER || \"postgres\",\n            password: process.env.DB_PASSWORD,\n            ssl: false,\n            max: 20,\n            idleTimeoutMillis: 30000,\n            connectionTimeoutMillis: 10000\n        };\n    }\n    // Method 2: Public IP (for local development)\n    console.log(\"\\uD83D\\uDD17 Using Public IP connection for local development\");\n    return {\n        host: process.env.DB_HOST || \"34.86.121.148\",\n        port: Number.parseInt(process.env.DB_PORT || \"5432\"),\n        database: process.env.DB_NAME || \"corp\",\n        user: process.env.DB_USER || \"postgres\",\n        password: process.env.DB_PASSWORD,\n        ssl: {\n            rejectUnauthorized: false\n        },\n        max: 20,\n        idleTimeoutMillis: 30000,\n        connectionTimeoutMillis: 10000\n    };\n})();\n// Create connection pool\nconst pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool(dbConfig);\n// Handle pool errors\npool.on(\"error\", (err)=>{\n    console.error(\"❌ Unexpected error on idle client\", err);\n    process.exit(-1);\n});\n// Log connection details (without password)\nconsole.log(\"\\uD83D\\uDD27 Database Configuration:\", {\n    host: dbConfig.host,\n    port: dbConfig.port || \"Unix Socket\",\n    database: dbConfig.database,\n    user: dbConfig.user,\n    ssl: !!dbConfig.ssl,\n    environment: \"development\",\n    isGoogleCloud: !!isGoogleCloud\n});\n// Test database connection\nasync function testConnection() {\n    try {\n        console.log(\"\\uD83E\\uDDEA Testing database connection...\");\n        const client = await pool.connect();\n        const result = await client.query(`\n      SELECT \n        NOW() as current_time, \n        version() as postgres_version,\n        current_database() as database_name,\n        current_user as current_user,\n        inet_server_addr() as server_ip\n    `);\n        client.release();\n        const connectionInfo = result.rows[0];\n        console.log(\"✅ Database connected successfully!\");\n        console.log(\"\\uD83D\\uDD50 Current time:\", connectionInfo.current_time);\n        console.log(\"\\uD83D\\uDDC4️ Database:\", connectionInfo.database_name);\n        console.log(\"\\uD83D\\uDC64 User:\", connectionInfo.current_user);\n        console.log(\"\\uD83C\\uDF10 Server IP:\", connectionInfo.server_ip || \"Unix Socket\");\n        console.log(\"\\uD83D\\uDCCA PostgreSQL version:\", connectionInfo.postgres_version);\n        return {\n            success: true,\n            data: connectionInfo\n        };\n    } catch (error) {\n        console.error(\"❌ Database connection failed:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        // Provide helpful error messages\n        if (errorMessage.includes(\"ECONNREFUSED\")) {\n            console.error(\"\\uD83D\\uDCA1 Tip: Make sure your Google Cloud SQL instance is running and accessible\");\n        }\n        if (errorMessage.includes(\"password authentication failed\")) {\n            console.error(\"\\uD83D\\uDCA1 Tip: Check your database username and password\");\n        }\n        if (errorMessage.includes(\"database\") && errorMessage.includes(\"does not exist\")) {\n            console.error(\"\\uD83D\\uDCA1 Tip: Make sure the 'corp' database exists in your instance\");\n        }\n        return {\n            success: false,\n            error: errorMessage\n        };\n    }\n}\n// Execute a query with error handling\nasync function query(text, params) {\n    const start = Date.now();\n    try {\n        console.log(\"\\uD83D\\uDD0D Executing query:\", text.substring(0, 100) + (text.length > 100 ? \"...\" : \"\"));\n        const result = await pool.query(text, params);\n        const duration = Date.now() - start;\n        console.log(`✅ Query executed in ${duration}ms, returned ${result.rowCount} rows`);\n        return result;\n    } catch (error) {\n        const duration = Date.now() - start;\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        console.error(`❌ Query failed after ${duration}ms:`, errorMessage);\n        console.error(\"\\uD83D\\uDCDD Query:\", text.substring(0, 200));\n        console.error(\"\\uD83D\\uDCCB Params:\", params);\n        throw error;\n    }\n}\n// Get a client from the pool for transactions\nasync function getClient() {\n    return await pool.connect();\n}\n// Close the pool (for graceful shutdown)\nasync function closePool() {\n    await pool.end();\n    console.log(\"\\uD83D\\uDD12 Database pool closed\");\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.ts\n");

/***/ }),

/***/ "(rsc)/./lib/firebase-admin.ts":
/*!*******************************!*\
  !*** ./lib/firebase-admin.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFirebaseUser: () => (/* binding */ createFirebaseUser),\n/* harmony export */   deleteFirebaseUser: () => (/* binding */ deleteFirebaseUser),\n/* harmony export */   getUserByEmail: () => (/* binding */ getUserByEmail),\n/* harmony export */   setCustomClaims: () => (/* binding */ setCustomClaims),\n/* harmony export */   updateFirebaseUser: () => (/* binding */ updateFirebaseUser)\n/* harmony export */ });\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin */ \"firebase-admin\");\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_admin__WEBPACK_IMPORTED_MODULE_0__);\n// Firebase Admin SDK functions\n// Note: This requires firebase-admin package and proper service account setup\n\nlet adminInitialized = false;\n// Mock functions for development when firebase-admin is not available\nconst mockFirebaseAdmin = {\n    createUser: async (userData)=>{\n        console.log(\"\\uD83C\\uDFAD MOCK: Creating Firebase user:\", userData.email);\n        return {\n            uid: `mock_uid_${Date.now()}`,\n            email: userData.email,\n            displayName: userData.displayName\n        };\n    },\n    setCustomClaims: async (uid, claims)=>{\n        console.log(\"\\uD83C\\uDFAD MOCK: Setting custom claims for:\", uid, claims);\n    },\n    deleteUser: async (uid)=>{\n        console.log(\"\\uD83C\\uDFAD MOCK: Deleting Firebase user:\", uid);\n    },\n    updateUser: async (uid, updates)=>{\n        console.log(\"\\uD83C\\uDFAD MOCK: Updating Firebase user:\", uid, updates);\n        return {\n            uid,\n            ...updates\n        };\n    },\n    getUserByEmail: async (email)=>{\n        console.log(\"\\uD83C\\uDFAD MOCK: Getting user by email:\", email);\n        return {\n            uid: `mock_uid_${email.replace(/[^a-zA-Z0-9]/g, \"_\")}`,\n            email,\n            displayName: \"Mock User\"\n        };\n    }\n};\n// Try to initialize Firebase Admin SDK\nfunction initializeFirebaseAdmin() {\n    if (adminInitialized) return true;\n    try {\n        // Check if any apps are already initialized\n        if (firebase_admin__WEBPACK_IMPORTED_MODULE_0__.apps.length === 0) {\n            console.log(\"\\uD83D\\uDD25 Initializing Firebase Admin SDK...\");\n            // In production, you would use service account credentials:\n            // const serviceAccount = require('./path/to/serviceAccountKey.json')\n            // admin.initializeApp({\n            //   credential: admin.credential.cert(serviceAccount)\n            // })\n            // For development, initialize with project ID only\n            firebase_admin__WEBPACK_IMPORTED_MODULE_0__.initializeApp({\n                projectId: \"reactgladgrade\"\n            });\n            console.log(\"✅ Firebase Admin SDK initialized\");\n        } else {\n            console.log(\"✅ Firebase Admin SDK already initialized\");\n        }\n        adminInitialized = true;\n        return true;\n    } catch (error) {\n        console.error(\"❌ Firebase Admin SDK not available:\", error);\n        console.log(\"\\uD83C\\uDFAD Using mock Firebase functions for development\");\n        return false;\n    }\n}\n// Create a new Firebase user\nasync function createFirebaseUser(userData) {\n    const isAdminAvailable = initializeFirebaseAdmin();\n    if (!isAdminAvailable) {\n        return mockFirebaseAdmin.createUser(userData);\n    }\n    try {\n        console.log(`🔥 Creating Firebase user: ${userData.email}`);\n        const userRecord = await firebase_admin__WEBPACK_IMPORTED_MODULE_0__.auth().createUser({\n            email: userData.email,\n            displayName: userData.displayName,\n            password: userData.password,\n            emailVerified: userData.emailVerified || false\n        });\n        console.log(`✅ Firebase user created successfully: ${userRecord.uid}`);\n        return userRecord;\n    } catch (error) {\n        console.error(\"❌ Error creating Firebase user:\", error);\n        throw error;\n    }\n}\n// Set custom claims for a user (for role-based access)\nasync function setCustomClaims(uid, claims) {\n    const isAdminAvailable = initializeFirebaseAdmin();\n    if (!isAdminAvailable) {\n        return mockFirebaseAdmin.setCustomClaims(uid, claims);\n    }\n    try {\n        console.log(`🏷️ Setting custom claims for user: ${uid}`, claims);\n        await firebase_admin__WEBPACK_IMPORTED_MODULE_0__.auth().setCustomUserClaims(uid, claims);\n        console.log(`✅ Custom claims set successfully for user: ${uid}`);\n    } catch (error) {\n        console.error(\"❌ Error setting custom claims:\", error);\n        throw error;\n    }\n}\n// Delete a Firebase user\nasync function deleteFirebaseUser(uid) {\n    const isAdminAvailable = initializeFirebaseAdmin();\n    if (!isAdminAvailable) {\n        return mockFirebaseAdmin.deleteUser(uid);\n    }\n    try {\n        console.log(`🗑️ Deleting Firebase user: ${uid}`);\n        await firebase_admin__WEBPACK_IMPORTED_MODULE_0__.auth().deleteUser(uid);\n        console.log(`✅ Firebase user deleted successfully: ${uid}`);\n    } catch (error) {\n        console.error(\"❌ Error deleting Firebase user:\", error);\n        throw error;\n    }\n}\n// Get user by email\nasync function getUserByEmail(email) {\n    const isAdminAvailable = initializeFirebaseAdmin();\n    if (!isAdminAvailable) {\n        return mockFirebaseAdmin.getUserByEmail(email);\n    }\n    try {\n        const userRecord = await firebase_admin__WEBPACK_IMPORTED_MODULE_0__.auth().getUserByEmail(email);\n        return userRecord;\n    } catch (error) {\n        console.error(\"❌ Error getting user by email:\", error);\n        throw error;\n    }\n}\n// Update user\nasync function updateFirebaseUser(uid, updates) {\n    const isAdminAvailable = initializeFirebaseAdmin();\n    if (!isAdminAvailable) {\n        return mockFirebaseAdmin.updateUser(uid, updates);\n    }\n    try {\n        console.log(`🔄 Updating Firebase user: ${uid}`);\n        const userRecord = await firebase_admin__WEBPACK_IMPORTED_MODULE_0__.auth().updateUser(uid, updates);\n        console.log(`✅ Firebase user updated successfully: ${uid}`);\n        return userRecord;\n    } catch (error) {\n        console.error(\"❌ Error updating Firebase user:\", error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/firebase-admin.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclients%2Froute&page=%2Fapi%2Fclients%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclients%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();