"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/clients/route";
exports.ids = ["app/api/clients/route"];
exports.modules = {

/***/ "firebase-admin":
/*!*********************************!*\
  !*** external "firebase-admin" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("firebase-admin");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "async_hooks":
/*!******************************!*\
  !*** external "async_hooks" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("async_hooks");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "console":
/*!**************************!*\
  !*** external "console" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("console");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "diagnostics_channel":
/*!**************************************!*\
  !*** external "diagnostics_channel" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("diagnostics_channel");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

module.exports = require("http2");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "perf_hooks":
/*!*****************************!*\
  !*** external "perf_hooks" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("perf_hooks");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("process");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "stream/web":
/*!*****************************!*\
  !*** external "stream/web" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("stream/web");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("string_decoder");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "util/types":
/*!*****************************!*\
  !*** external "util/types" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("util/types");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

module.exports = import("pg");;

/***/ }),

/***/ "node:events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:events");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclients%2Froute&page=%2Fapi%2Fclients%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclients%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclients%2Froute&page=%2Fapi%2Fclients%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclients%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_clients_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/clients/route.ts */ \"(rsc)/./app/api/clients/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_clients_route_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_clients_route_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/clients/route\",\n        pathname: \"/api/clients\",\n        filename: \"route\",\n        bundlePath: \"app/api/clients/route\"\n    },\n    resolvedPagePath: \"/Users/miguelgiraldo/DEVSPACE/dev_gladgrade_portal/app/api/clients/route.ts\",\n    nextConfigOutput,\n    userland: _Users_miguelgiraldo_DEVSPACE_dev_gladgrade_portal_app_api_clients_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/clients/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjbGllbnRzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjbGllbnRzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2xpZW50cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm1pZ3VlbGdpcmFsZG8lMkZERVZTUEFDRSUyRmRldl9nbGFkZ3JhZGVfcG9ydGFsJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRm1pZ3VlbGdpcmFsZG8lMkZERVZTUEFDRSUyRmRldl9nbGFkZ3JhZGVfcG9ydGFsJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMyQjtBQUN4RztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvP2YwZDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL21pZ3VlbGdpcmFsZG8vREVWU1BBQ0UvZGV2X2dsYWRncmFkZV9wb3J0YWwvYXBwL2FwaS9jbGllbnRzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jbGllbnRzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY2xpZW50c1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvY2xpZW50cy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9taWd1ZWxnaXJhbGRvL0RFVlNQQUNFL2Rldl9nbGFkZ3JhZGVfcG9ydGFsL2FwcC9hcGkvY2xpZW50cy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY2xpZW50cy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclients%2Froute&page=%2Fapi%2Fclients%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclients%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/clients/route.ts":
/*!**********************************!*\
  !*** ./app/api/clients/route.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./lib/database.ts\");\n/* harmony import */ var _lib_auth_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/auth-utils */ \"(rsc)/./lib/auth-utils.ts\");\n/* harmony import */ var _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/firebase-admin */ \"(rsc)/./lib/firebase-admin.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_database__WEBPACK_IMPORTED_MODULE_1__, _lib_auth_utils__WEBPACK_IMPORTED_MODULE_2__]);\n([_lib_database__WEBPACK_IMPORTED_MODULE_1__, _lib_auth_utils__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n// Import Firebase functions with error handling\nlet createFirebaseUser = null;\nlet setCustomClaims = null;\ntry {\n    const firebaseAdmin = __webpack_require__(/*! @/lib/firebase-admin */ \"(rsc)/./lib/firebase-admin.ts\");\n    createFirebaseUser = firebaseAdmin.createFirebaseUser;\n    setCustomClaims = firebaseAdmin.setCustomClaims;\n} catch (error) {\n    console.log(\"⚠️ Firebase Admin functions not available, using database-only mode\");\n}\n// Helper function to generate temporary password\nfunction generateTemporaryPassword() {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%\";\n    let password = \"\";\n    for(let i = 0; i < 12; i++){\n        password += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return password;\n}\n// GET /api/clients - Get business clients based on user role\nasync function GET(request) {\n    try {\n        console.log(\"\\uD83C\\uDFE2 Fetching business clients with role-based access...\");\n        // Get authorization header\n        const authHeader = request.headers.get(\"authorization\");\n        let currentEmployee = null;\n        let userRole = null;\n        if (authHeader?.startsWith(\"Bearer \")) {\n            try {\n                const token = authHeader.substring(7);\n                const decodedToken = await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_3__.auth.verifyIdToken(token);\n                console.log(\"\\uD83D\\uDD0D Decoded token:\", {\n                    uid: decodedToken.uid,\n                    email: decodedToken.email,\n                    role: decodedToken.role\n                });\n                // Get employee info\n                currentEmployee = await (0,_lib_auth_utils__WEBPACK_IMPORTED_MODULE_2__.getEmployeeByAuth)(decodedToken.uid, decodedToken.email);\n                userRole = decodedToken.role || currentEmployee?.role;\n                console.log(\"\\uD83D\\uDC64 Current employee:\", currentEmployee);\n                console.log(\"\\uD83C\\uDFAD User role:\", userRole);\n            } catch (authError) {\n                console.log(\"⚠️ Auth verification failed, proceeding without role filtering:\", authError);\n            }\n        } else {\n            console.log(\"⚠️ No authorization header found\");\n        }\n        // Build query based on role\n        let clientQuery = `\n      SELECT \n        bc.id,\n        bc.business_name,\n        bc.contact_name,\n        bc.contact_email,\n        bc.phone,\n        bc.website,\n        bc.business_address,\n        bc.city,\n        bc.state,\n        bc.zip_code,\n        bc.industry_category,\n        bc.business_description,\n        bc.claim_status,\n        bc.claim_method,\n        bc.notes,\n        bc.is_active,\n        bc.created_at,\n        bc.updated_at,\n        bc.gcsg_score,\n        bc.average_rating,\n        bc.total_reviews,\n        bc.sales_rep_id,\n        e.full_name as sales_rep_name,\n        e.email as sales_rep_email\n      FROM business_clients bc\n      LEFT JOIN employees e ON bc.sales_rep_id = e.id\n    `;\n        const queryParams = [];\n        // Apply role-based filtering\n        if (userRole === \"super_admin\" || userRole === \"admin\") {\n            console.log(\"\\uD83D\\uDD13 Super admin/Admin access - showing all clients\");\n        // No additional filtering - show all clients\n        } else if (userRole === \"sales_manager\" || userRole === \"cco\") {\n            console.log(\"\\uD83D\\uDCCA Sales manager/CCO access - showing all clients\");\n        // No additional filtering - show all clients\n        } else if (userRole === \"employee\" && currentEmployee) {\n            console.log(`👤 Employee access - showing clients for sales rep ID: ${currentEmployee.id}`);\n            clientQuery += ` WHERE bc.sales_rep_id = $1`;\n            queryParams.push(currentEmployee.id);\n        } else {\n            console.log(\"❌ No valid role found - showing all clients (fallback)\");\n        // Fallback: show all clients if role detection fails\n        }\n        clientQuery += ` ORDER BY bc.created_at DESC`;\n        console.log(\"\\uD83D\\uDD0D Executing query:\", clientQuery);\n        console.log(\"\\uD83D\\uDD0D Query params:\", queryParams);\n        const result = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(clientQuery, queryParams);\n        console.log(`✅ Found ${result.rows.length} business clients`);\n        // Debug: Log first few clients to see what data we're getting\n        if (result.rows.length > 0) {\n            console.log(\"\\uD83D\\uDD0D Sample client data:\", {\n                id: result.rows[0].id,\n                business_name: result.rows[0].business_name,\n                contact_name: result.rows[0].contact_name,\n                sales_rep_name: result.rows[0].sales_rep_name,\n                created_at: result.rows[0].created_at\n            });\n        } else {\n            console.log(\"⚠️ No clients found in database\");\n            // Let's check if there are any clients at all\n            const totalCount = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(\"SELECT COUNT(*) as count FROM business_clients\");\n            console.log(`📊 Total clients in database: ${totalCount.rows[0]?.count || 0}`);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: result.rows,\n            debug: {\n                userRole,\n                employeeId: currentEmployee?.id,\n                totalFound: result.rows.length\n            }\n        });\n    } catch (error) {\n        console.error(\"❌ Error fetching business clients:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to fetch business clients from database\",\n            details: errorMessage\n        }, {\n            status: 500\n        });\n    }\n}\n// POST /api/clients - Create client user for existing business\nasync function POST(request) {\n    const client = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n    try {\n        const { business_id, user_email, user_name, user_role = \"client_admin\", create_firebase_account = true, temporary_password } = await request.json();\n        if (!business_id || !user_email || !user_name) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Business ID, user email, and name are required\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`👤 Creating client user for business ID: ${business_id}`);\n        await client.query(\"BEGIN\");\n        // Get business details from corp.business_clients\n        const businessResult = await client.query(\"SELECT * FROM business_clients WHERE id = $1\", [\n            business_id\n        ]);\n        if (businessResult.rows.length === 0) {\n            await client.query(\"ROLLBACK\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Business client not found\"\n            }, {\n                status: 404\n            });\n        }\n        const business = businessResult.rows[0];\n        let firebaseUid = null;\n        let firebaseAccountCreated = false;\n        // Create Firebase user if requested and available\n        if (create_firebase_account && createFirebaseUser) {\n            try {\n                console.log(\"\\uD83D\\uDD25 Creating Firebase Authentication user for client...\");\n                const firebaseUser = await createFirebaseUser({\n                    email: user_email.toLowerCase().trim(),\n                    displayName: user_name.trim(),\n                    password: temporary_password || generateTemporaryPassword(),\n                    emailVerified: false\n                });\n                firebaseUid = firebaseUser.uid;\n                firebaseAccountCreated = true;\n                console.log(`✅ Firebase user created with UID: ${firebaseUid}`);\n                // Set custom claims for client access\n                if (setCustomClaims) {\n                    await setCustomClaims(firebaseUid, {\n                        role: \"client\",\n                        business_id: business_id,\n                        business_name: business.business_name,\n                        user_role: user_role,\n                        permissions: [\n                            \"client_access\",\n                            \"view_reports\",\n                            \"manage_reviews\",\n                            \"manage_ads\"\n                        ]\n                    });\n                    console.log(`✅ Custom claims set for Firebase client user`);\n                }\n            } catch (firebaseError) {\n                await client.query(\"ROLLBACK\");\n                const errorMessage = firebaseError instanceof Error ? firebaseError.message : \"Unknown Firebase error\";\n                console.error(\"❌ Firebase user creation failed:\", errorMessage);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: \"Failed to create Firebase user for client\",\n                    details: errorMessage\n                }, {\n                    status: 500\n                });\n            }\n        }\n        // Update business_clients record with Firebase UID\n        await client.query(`UPDATE business_clients \n       SET firebase_uid = $1, updated_at = NOW() \n       WHERE id = $2`, [\n            firebaseUid,\n            business_id\n        ]);\n        await client.query(\"COMMIT\");\n        console.log(\"✅ Client user created successfully for business:\", business.business_name);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: {\n                business: business,\n                firebase_account_created: firebaseAccountCreated,\n                firebase_uid: firebaseUid,\n                temporary_password: firebaseAccountCreated ? temporary_password || \"Auto-generated\" : null\n            },\n            login_instructions: firebaseAccountCreated ? \"The client can now log in at portal.gladgrade.com with their email and password\" : \"Database record updated. Firebase account can be created later.\"\n        });\n    } catch (error) {\n        await client.query(\"ROLLBACK\");\n        console.error(\"❌ Error creating client user:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        const errorCode = error && typeof error === \"object\" && \"code\" in error ? error.code : null;\n        if (errorCode === \"23505\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"User email already exists\"\n            }, {\n                status: 409\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to create client user\",\n            details: errorMessage\n        }, {\n            status: 500\n        });\n    } finally{\n        client.release();\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/clients/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth-utils.ts":
/*!***************************!*\
  !*** ./lib/auth-utils.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentFirebaseUser: () => (/* binding */ getCurrentFirebaseUser),\n/* harmony export */   getEmployeeByAuth: () => (/* binding */ getEmployeeByAuth)\n/* harmony export */ });\n/* harmony import */ var _services_firebase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/services/firebase */ \"(rsc)/./services/firebase.ts\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./lib/database.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_database__WEBPACK_IMPORTED_MODULE_1__]);\n_lib_database__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// Get current user from Firebase Auth (client-side)\nasync function getCurrentFirebaseUser() {\n    return new Promise((resolve)=>{\n        const unsubscribe = _services_firebase__WEBPACK_IMPORTED_MODULE_0__.auth.onAuthStateChanged((user)=>{\n            unsubscribe();\n            resolve(user);\n        });\n    });\n}\n// Get employee data by Firebase UID or email\nasync function getEmployeeByAuth(uid, email) {\n    try {\n        console.log(\"\\uD83D\\uDD0D getEmployeeByAuth called with:\", {\n            uid,\n            email\n        });\n        let result;\n        if (uid) {\n            console.log(\"\\uD83D\\uDD0D Looking up by Firebase UID:\", uid);\n            result = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(`SELECT e.id, e.full_name, e.email, e.role, e.status, e.department_id,\n                d.name as department_name\n         FROM employees e\n         LEFT JOIN departments d ON e.department_id = d.id\n         WHERE e.firebase_uid = $1 AND e.status = 'active'`, [\n                uid\n            ]);\n            console.log(\"\\uD83D\\uDCCA UID lookup result:\", result.rows.length, \"rows\");\n        }\n        // Fallback to email if UID lookup fails or no UID provided\n        if ((!result || result.rows.length === 0) && email) {\n            console.log(\"\\uD83D\\uDD0D Looking up by email:\", email);\n            result = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.query)(`SELECT e.id, e.full_name, e.email, e.role, e.status, e.department_id,\n                d.name as department_name\n         FROM employees e\n         LEFT JOIN departments d ON e.department_id = d.id\n         WHERE LOWER(e.email) = LOWER($1) AND e.status = 'active'`, [\n                email\n            ]);\n            console.log(\"\\uD83D\\uDCCA Email lookup result:\", result.rows.length, \"rows\");\n            if (result.rows.length > 0) {\n                console.log(\"✅ Found employee:\", result.rows[0]);\n            }\n        }\n        if (!result || result.rows.length === 0) {\n            console.log(\"❌ No employee found\");\n            return null;\n        }\n        const employee = result.rows[0];\n        const employeeData = {\n            id: employee.id,\n            name: employee.full_name,\n            email: employee.email,\n            role: employee.role,\n            status: employee.status,\n            department_id: employee.department_id,\n            department_name: employee.department_name\n        };\n        console.log(\"✅ Returning employee data:\", employeeData);\n        return employeeData;\n    } catch (error) {\n        console.error(\"❌ Error getting employee by auth:\", error);\n        return null;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXV0aC11dGlscy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTBDO0FBQ0o7QUFjdEMsb0RBQW9EO0FBQzdDLGVBQWVFO0lBQ3BCLE9BQU8sSUFBSUMsUUFBUSxDQUFDQztRQUNsQixNQUFNQyxjQUFjTCxvREFBSUEsQ0FBQ00sa0JBQWtCLENBQUMsQ0FBQ0M7WUFDM0NGO1lBQ0FELFFBQVFHO1FBQ1Y7SUFDRjtBQUNGO0FBRUEsNkNBQTZDO0FBQ3RDLGVBQWVDLGtCQUFrQkMsR0FBWSxFQUFFQyxLQUFjO0lBQ2xFLElBQUk7UUFDRkMsUUFBUUMsR0FBRyxDQUFDLCtDQUFxQztZQUFFSDtZQUFLQztRQUFNO1FBRTlELElBQUlHO1FBRUosSUFBSUosS0FBSztZQUNQRSxRQUFRQyxHQUFHLENBQUMsNENBQWtDSDtZQUM5Q0ksU0FBUyxNQUFNWixvREFBS0EsQ0FDbEIsQ0FBQzs7OzswREFJaUQsQ0FBQyxFQUNuRDtnQkFBQ1E7YUFBSTtZQUVQRSxRQUFRQyxHQUFHLENBQUMsbUNBQXlCQyxPQUFPQyxJQUFJLENBQUNDLE1BQU0sRUFBRTtRQUMzRDtRQUVBLDJEQUEyRDtRQUMzRCxJQUFJLENBQUMsQ0FBQ0YsVUFBVUEsT0FBT0MsSUFBSSxDQUFDQyxNQUFNLEtBQUssTUFBTUwsT0FBTztZQUNsREMsUUFBUUMsR0FBRyxDQUFDLHFDQUEyQkY7WUFDdkNHLFNBQVMsTUFBTVosb0RBQUtBLENBQ2xCLENBQUM7Ozs7aUVBSXdELENBQUMsRUFDMUQ7Z0JBQUNTO2FBQU07WUFFVEMsUUFBUUMsR0FBRyxDQUFDLHFDQUEyQkMsT0FBT0MsSUFBSSxDQUFDQyxNQUFNLEVBQUU7WUFDM0QsSUFBSUYsT0FBT0MsSUFBSSxDQUFDQyxNQUFNLEdBQUcsR0FBRztnQkFDMUJKLFFBQVFDLEdBQUcsQ0FBQyxxQkFBcUJDLE9BQU9DLElBQUksQ0FBQyxFQUFFO1lBQ2pEO1FBQ0Y7UUFFQSxJQUFJLENBQUNELFVBQVVBLE9BQU9DLElBQUksQ0FBQ0MsTUFBTSxLQUFLLEdBQUc7WUFDdkNKLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE9BQU87UUFDVDtRQUVBLE1BQU1JLFdBQVdILE9BQU9DLElBQUksQ0FBQyxFQUFFO1FBQy9CLE1BQU1HLGVBQWU7WUFDbkJDLElBQUlGLFNBQVNFLEVBQUU7WUFDZkMsTUFBTUgsU0FBU0ksU0FBUztZQUN4QlYsT0FBT00sU0FBU04sS0FBSztZQUNyQlcsTUFBTUwsU0FBU0ssSUFBSTtZQUNuQkMsUUFBUU4sU0FBU00sTUFBTTtZQUN2QkMsZUFBZVAsU0FBU08sYUFBYTtZQUNyQ0MsaUJBQWlCUixTQUFTUSxlQUFlO1FBQzNDO1FBRUFiLFFBQVFDLEdBQUcsQ0FBQyw4QkFBOEJLO1FBQzFDLE9BQU9BO0lBQ1QsRUFBRSxPQUFPUSxPQUFPO1FBQ2RkLFFBQVFjLEtBQUssQ0FBQyxxQ0FBcUNBO1FBQ25ELE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL2xpYi9hdXRoLXV0aWxzLnRzPzM4MTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXV0aCB9IGZyb20gXCJAL3NlcnZpY2VzL2ZpcmViYXNlXCJcbmltcG9ydCB7IHF1ZXJ5IH0gZnJvbSBcIkAvbGliL2RhdGFiYXNlXCJcbmltcG9ydCB0eXBlIHsgVXNlciB9IGZyb20gXCJmaXJlYmFzZS9hdXRoXCJcblxuLy8gVHlwZSBkZWZpbml0aW9uc1xuaW50ZXJmYWNlIEVtcGxveWVlRGF0YSB7XG4gIGlkOiBudW1iZXJcbiAgbmFtZTogc3RyaW5nXG4gIGVtYWlsOiBzdHJpbmdcbiAgcm9sZTogc3RyaW5nXG4gIHN0YXR1czogc3RyaW5nXG4gIGRlcGFydG1lbnRfaWQ6IG51bWJlciB8IG51bGxcbiAgZGVwYXJ0bWVudF9uYW1lOiBzdHJpbmcgfCBudWxsXG59XG5cbi8vIEdldCBjdXJyZW50IHVzZXIgZnJvbSBGaXJlYmFzZSBBdXRoIChjbGllbnQtc2lkZSlcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRDdXJyZW50RmlyZWJhc2VVc2VyKCk6IFByb21pc2U8VXNlciB8IG51bGw+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgY29uc3QgdW5zdWJzY3JpYmUgPSBhdXRoLm9uQXV0aFN0YXRlQ2hhbmdlZCgodXNlcjogVXNlciB8IG51bGwpID0+IHtcbiAgICAgIHVuc3Vic2NyaWJlKClcbiAgICAgIHJlc29sdmUodXNlcilcbiAgICB9KVxuICB9KVxufVxuXG4vLyBHZXQgZW1wbG95ZWUgZGF0YSBieSBGaXJlYmFzZSBVSUQgb3IgZW1haWxcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRFbXBsb3llZUJ5QXV0aCh1aWQ/OiBzdHJpbmcsIGVtYWlsPzogc3RyaW5nKTogUHJvbWlzZTxFbXBsb3llZURhdGEgfCBudWxsPiB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coXCLwn5SNIGdldEVtcGxveWVlQnlBdXRoIGNhbGxlZCB3aXRoOlwiLCB7IHVpZCwgZW1haWwgfSlcblxuICAgIGxldCByZXN1bHRcblxuICAgIGlmICh1aWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwi8J+UjSBMb29raW5nIHVwIGJ5IEZpcmViYXNlIFVJRDpcIiwgdWlkKVxuICAgICAgcmVzdWx0ID0gYXdhaXQgcXVlcnkoXG4gICAgICAgIGBTRUxFQ1QgZS5pZCwgZS5mdWxsX25hbWUsIGUuZW1haWwsIGUucm9sZSwgZS5zdGF0dXMsIGUuZGVwYXJ0bWVudF9pZCxcbiAgICAgICAgICAgICAgICBkLm5hbWUgYXMgZGVwYXJ0bWVudF9uYW1lXG4gICAgICAgICBGUk9NIGVtcGxveWVlcyBlXG4gICAgICAgICBMRUZUIEpPSU4gZGVwYXJ0bWVudHMgZCBPTiBlLmRlcGFydG1lbnRfaWQgPSBkLmlkXG4gICAgICAgICBXSEVSRSBlLmZpcmViYXNlX3VpZCA9ICQxIEFORCBlLnN0YXR1cyA9ICdhY3RpdmUnYCxcbiAgICAgICAgW3VpZF0sXG4gICAgICApXG4gICAgICBjb25zb2xlLmxvZyhcIvCfk4ogVUlEIGxvb2t1cCByZXN1bHQ6XCIsIHJlc3VsdC5yb3dzLmxlbmd0aCwgXCJyb3dzXCIpXG4gICAgfVxuXG4gICAgLy8gRmFsbGJhY2sgdG8gZW1haWwgaWYgVUlEIGxvb2t1cCBmYWlscyBvciBubyBVSUQgcHJvdmlkZWRcbiAgICBpZiAoKCFyZXN1bHQgfHwgcmVzdWx0LnJvd3MubGVuZ3RoID09PSAwKSAmJiBlbWFpbCkge1xuICAgICAgY29uc29sZS5sb2coXCLwn5SNIExvb2tpbmcgdXAgYnkgZW1haWw6XCIsIGVtYWlsKVxuICAgICAgcmVzdWx0ID0gYXdhaXQgcXVlcnkoXG4gICAgICAgIGBTRUxFQ1QgZS5pZCwgZS5mdWxsX25hbWUsIGUuZW1haWwsIGUucm9sZSwgZS5zdGF0dXMsIGUuZGVwYXJ0bWVudF9pZCxcbiAgICAgICAgICAgICAgICBkLm5hbWUgYXMgZGVwYXJ0bWVudF9uYW1lXG4gICAgICAgICBGUk9NIGVtcGxveWVlcyBlXG4gICAgICAgICBMRUZUIEpPSU4gZGVwYXJ0bWVudHMgZCBPTiBlLmRlcGFydG1lbnRfaWQgPSBkLmlkXG4gICAgICAgICBXSEVSRSBMT1dFUihlLmVtYWlsKSA9IExPV0VSKCQxKSBBTkQgZS5zdGF0dXMgPSAnYWN0aXZlJ2AsXG4gICAgICAgIFtlbWFpbF0sXG4gICAgICApXG4gICAgICBjb25zb2xlLmxvZyhcIvCfk4ogRW1haWwgbG9va3VwIHJlc3VsdDpcIiwgcmVzdWx0LnJvd3MubGVuZ3RoLCBcInJvd3NcIilcbiAgICAgIGlmIChyZXN1bHQucm93cy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwi4pyFIEZvdW5kIGVtcGxveWVlOlwiLCByZXN1bHQucm93c1swXSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIXJlc3VsdCB8fCByZXN1bHQucm93cy5sZW5ndGggPT09IDApIHtcbiAgICAgIGNvbnNvbGUubG9nKFwi4p2MIE5vIGVtcGxveWVlIGZvdW5kXCIpXG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cblxuICAgIGNvbnN0IGVtcGxveWVlID0gcmVzdWx0LnJvd3NbMF1cbiAgICBjb25zdCBlbXBsb3llZURhdGEgPSB7XG4gICAgICBpZDogZW1wbG95ZWUuaWQsXG4gICAgICBuYW1lOiBlbXBsb3llZS5mdWxsX25hbWUsXG4gICAgICBlbWFpbDogZW1wbG95ZWUuZW1haWwsXG4gICAgICByb2xlOiBlbXBsb3llZS5yb2xlLFxuICAgICAgc3RhdHVzOiBlbXBsb3llZS5zdGF0dXMsXG4gICAgICBkZXBhcnRtZW50X2lkOiBlbXBsb3llZS5kZXBhcnRtZW50X2lkLFxuICAgICAgZGVwYXJ0bWVudF9uYW1lOiBlbXBsb3llZS5kZXBhcnRtZW50X25hbWUsXG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coXCLinIUgUmV0dXJuaW5nIGVtcGxveWVlIGRhdGE6XCIsIGVtcGxveWVlRGF0YSlcbiAgICByZXR1cm4gZW1wbG95ZWVEYXRhXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIuKdjCBFcnJvciBnZXR0aW5nIGVtcGxveWVlIGJ5IGF1dGg6XCIsIGVycm9yKVxuICAgIHJldHVybiBudWxsXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJhdXRoIiwicXVlcnkiLCJnZXRDdXJyZW50RmlyZWJhc2VVc2VyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJ1bnN1YnNjcmliZSIsIm9uQXV0aFN0YXRlQ2hhbmdlZCIsInVzZXIiLCJnZXRFbXBsb3llZUJ5QXV0aCIsInVpZCIsImVtYWlsIiwiY29uc29sZSIsImxvZyIsInJlc3VsdCIsInJvd3MiLCJsZW5ndGgiLCJlbXBsb3llZSIsImVtcGxveWVlRGF0YSIsImlkIiwibmFtZSIsImZ1bGxfbmFtZSIsInJvbGUiLCJzdGF0dXMiLCJkZXBhcnRtZW50X2lkIiwiZGVwYXJ0bWVudF9uYW1lIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth-utils.ts\n");

/***/ }),

/***/ "(rsc)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closePool: () => (/* binding */ closePool),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getClient: () => (/* binding */ getClient),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   testConnection: () => (/* binding */ testConnection)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([pg__WEBPACK_IMPORTED_MODULE_0__]);\npg__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Determine connection method based on environment\nconst isProduction = \"development\" === \"production\";\nconst isGoogleCloud = process.env.GOOGLE_CLOUD_PROJECT || process.env.FIREBASE_PROJECT_ID;\n// Database connection configuration\nconst dbConfig = (()=>{\n    // Method 1: Unix Socket (for Google Cloud Run/App Engine)\n    if (isProduction && isGoogleCloud) {\n        console.log(\"\\uD83D\\uDD17 Using Unix Socket connection for Google Cloud\");\n        return {\n            host: `/cloudsql/${process.env.FIREBASE_PROJECT_ID}:us-east4:gg-instance`,\n            database: process.env.DB_NAME || \"corp\",\n            user: process.env.DB_USER || \"postgres\",\n            password: process.env.DB_PASSWORD,\n            ssl: false,\n            max: 20,\n            idleTimeoutMillis: 30000,\n            connectionTimeoutMillis: 10000\n        };\n    }\n    // Method 2: Public IP (for local development)\n    console.log(\"\\uD83D\\uDD17 Using Public IP connection for local development\");\n    return {\n        host: process.env.DB_HOST || \"34.86.121.148\",\n        port: Number.parseInt(process.env.DB_PORT || \"5432\"),\n        database: process.env.DB_NAME || \"corp\",\n        user: process.env.DB_USER || \"postgres\",\n        password: process.env.DB_PASSWORD,\n        ssl: {\n            rejectUnauthorized: false\n        },\n        max: 20,\n        idleTimeoutMillis: 30000,\n        connectionTimeoutMillis: 10000\n    };\n})();\n// Create connection pool\nconst pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool(dbConfig);\n// Handle pool errors\npool.on(\"error\", (err)=>{\n    console.error(\"❌ Unexpected error on idle client\", err);\n    process.exit(-1);\n});\n// Log connection details (without password)\nconsole.log(\"\\uD83D\\uDD27 Database Configuration:\", {\n    host: dbConfig.host,\n    port: dbConfig.port || \"Unix Socket\",\n    database: dbConfig.database,\n    user: dbConfig.user,\n    ssl: !!dbConfig.ssl,\n    environment: \"development\",\n    isGoogleCloud: !!isGoogleCloud\n});\n// Test database connection\nasync function testConnection() {\n    try {\n        console.log(\"\\uD83E\\uDDEA Testing database connection...\");\n        const client = await pool.connect();\n        const result = await client.query(`\n      SELECT \n        NOW() as current_time, \n        version() as postgres_version,\n        current_database() as database_name,\n        current_user as current_user,\n        inet_server_addr() as server_ip\n    `);\n        client.release();\n        const connectionInfo = result.rows[0];\n        console.log(\"✅ Database connected successfully!\");\n        console.log(\"\\uD83D\\uDD50 Current time:\", connectionInfo.current_time);\n        console.log(\"\\uD83D\\uDDC4️ Database:\", connectionInfo.database_name);\n        console.log(\"\\uD83D\\uDC64 User:\", connectionInfo.current_user);\n        console.log(\"\\uD83C\\uDF10 Server IP:\", connectionInfo.server_ip || \"Unix Socket\");\n        console.log(\"\\uD83D\\uDCCA PostgreSQL version:\", connectionInfo.postgres_version);\n        return {\n            success: true,\n            data: connectionInfo\n        };\n    } catch (error) {\n        console.error(\"❌ Database connection failed:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        // Provide helpful error messages\n        if (errorMessage.includes(\"ECONNREFUSED\")) {\n            console.error(\"\\uD83D\\uDCA1 Tip: Make sure your Google Cloud SQL instance is running and accessible\");\n        }\n        if (errorMessage.includes(\"password authentication failed\")) {\n            console.error(\"\\uD83D\\uDCA1 Tip: Check your database username and password\");\n        }\n        if (errorMessage.includes(\"database\") && errorMessage.includes(\"does not exist\")) {\n            console.error(\"\\uD83D\\uDCA1 Tip: Make sure the 'corp' database exists in your instance\");\n        }\n        return {\n            success: false,\n            error: errorMessage\n        };\n    }\n}\n// Execute a query with error handling\nasync function query(text, params) {\n    const start = Date.now();\n    try {\n        console.log(\"\\uD83D\\uDD0D Executing query:\", text.substring(0, 100) + (text.length > 100 ? \"...\" : \"\"));\n        const result = await pool.query(text, params);\n        const duration = Date.now() - start;\n        console.log(`✅ Query executed in ${duration}ms, returned ${result.rowCount} rows`);\n        return result;\n    } catch (error) {\n        const duration = Date.now() - start;\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        console.error(`❌ Query failed after ${duration}ms:`, errorMessage);\n        console.error(\"\\uD83D\\uDCDD Query:\", text.substring(0, 200));\n        console.error(\"\\uD83D\\uDCCB Params:\", params);\n        throw error;\n    }\n}\n// Get a client from the pool for transactions\nasync function getClient() {\n    return await pool.connect();\n}\n// Close the pool (for graceful shutdown)\nasync function closePool() {\n    await pool.end();\n    console.log(\"\\uD83D\\uDD12 Database pool closed\");\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.ts\n");

/***/ }),

/***/ "(rsc)/./lib/firebase-admin.ts":
/*!*******************************!*\
  !*** ./lib/firebase-admin.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFirebaseUser: () => (/* binding */ createFirebaseUser),\n/* harmony export */   deleteFirebaseUser: () => (/* binding */ deleteFirebaseUser),\n/* harmony export */   getUserByEmail: () => (/* binding */ getUserByEmail),\n/* harmony export */   setCustomClaims: () => (/* binding */ setCustomClaims),\n/* harmony export */   updateFirebaseUser: () => (/* binding */ updateFirebaseUser)\n/* harmony export */ });\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin */ \"firebase-admin\");\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_admin__WEBPACK_IMPORTED_MODULE_0__);\n// Firebase Admin SDK functions\n// Note: This requires firebase-admin package and proper service account setup\n\nlet adminInitialized = false;\n// Mock functions for development when firebase-admin is not available\nconst mockFirebaseAdmin = {\n    createUser: async (userData)=>{\n        console.log(\"\\uD83C\\uDFAD MOCK: Creating Firebase user:\", userData.email);\n        return {\n            uid: `mock_uid_${Date.now()}`,\n            email: userData.email,\n            displayName: userData.displayName\n        };\n    },\n    setCustomClaims: async (uid, claims)=>{\n        console.log(\"\\uD83C\\uDFAD MOCK: Setting custom claims for:\", uid, claims);\n    },\n    deleteUser: async (uid)=>{\n        console.log(\"\\uD83C\\uDFAD MOCK: Deleting Firebase user:\", uid);\n    },\n    updateUser: async (uid, updates)=>{\n        console.log(\"\\uD83C\\uDFAD MOCK: Updating Firebase user:\", uid, updates);\n        return {\n            uid,\n            ...updates\n        };\n    },\n    getUserByEmail: async (email)=>{\n        console.log(\"\\uD83C\\uDFAD MOCK: Getting user by email:\", email);\n        return {\n            uid: `mock_uid_${email.replace(/[^a-zA-Z0-9]/g, \"_\")}`,\n            email,\n            displayName: \"Mock User\"\n        };\n    }\n};\n// Try to initialize Firebase Admin SDK\nfunction initializeFirebaseAdmin() {\n    if (adminInitialized) return true;\n    try {\n        // Check if any apps are already initialized\n        if (firebase_admin__WEBPACK_IMPORTED_MODULE_0__.apps.length === 0) {\n            console.log(\"\\uD83D\\uDD25 Initializing Firebase Admin SDK...\");\n            // In production, you would use service account credentials:\n            // const serviceAccount = require('./path/to/serviceAccountKey.json')\n            // admin.initializeApp({\n            //   credential: admin.credential.cert(serviceAccount)\n            // })\n            // For development, initialize with project ID only\n            firebase_admin__WEBPACK_IMPORTED_MODULE_0__.initializeApp({\n                projectId: \"reactgladgrade\"\n            });\n            console.log(\"✅ Firebase Admin SDK initialized\");\n        } else {\n            console.log(\"✅ Firebase Admin SDK already initialized\");\n        }\n        adminInitialized = true;\n        return true;\n    } catch (error) {\n        console.error(\"❌ Firebase Admin SDK not available:\", error);\n        console.log(\"\\uD83C\\uDFAD Using mock Firebase functions for development\");\n        return false;\n    }\n}\n// Create a new Firebase user\nasync function createFirebaseUser(userData) {\n    const isAdminAvailable = initializeFirebaseAdmin();\n    if (!isAdminAvailable) {\n        return mockFirebaseAdmin.createUser(userData);\n    }\n    try {\n        console.log(`🔥 Creating Firebase user: ${userData.email}`);\n        const userRecord = await firebase_admin__WEBPACK_IMPORTED_MODULE_0__.auth().createUser({\n            email: userData.email,\n            displayName: userData.displayName,\n            password: userData.password,\n            emailVerified: userData.emailVerified || false\n        });\n        console.log(`✅ Firebase user created successfully: ${userRecord.uid}`);\n        return userRecord;\n    } catch (error) {\n        console.error(\"❌ Error creating Firebase user:\", error);\n        throw error;\n    }\n}\n// Set custom claims for a user (for role-based access)\nasync function setCustomClaims(uid, claims) {\n    const isAdminAvailable = initializeFirebaseAdmin();\n    if (!isAdminAvailable) {\n        return mockFirebaseAdmin.setCustomClaims(uid, claims);\n    }\n    try {\n        console.log(`🏷️ Setting custom claims for user: ${uid}`, claims);\n        await firebase_admin__WEBPACK_IMPORTED_MODULE_0__.auth().setCustomUserClaims(uid, claims);\n        console.log(`✅ Custom claims set successfully for user: ${uid}`);\n    } catch (error) {\n        console.error(\"❌ Error setting custom claims:\", error);\n        throw error;\n    }\n}\n// Delete a Firebase user\nasync function deleteFirebaseUser(uid) {\n    const isAdminAvailable = initializeFirebaseAdmin();\n    if (!isAdminAvailable) {\n        return mockFirebaseAdmin.deleteUser(uid);\n    }\n    try {\n        console.log(`🗑️ Deleting Firebase user: ${uid}`);\n        await firebase_admin__WEBPACK_IMPORTED_MODULE_0__.auth().deleteUser(uid);\n        console.log(`✅ Firebase user deleted successfully: ${uid}`);\n    } catch (error) {\n        console.error(\"❌ Error deleting Firebase user:\", error);\n        throw error;\n    }\n}\n// Get user by email\nasync function getUserByEmail(email) {\n    const isAdminAvailable = initializeFirebaseAdmin();\n    if (!isAdminAvailable) {\n        return mockFirebaseAdmin.getUserByEmail(email);\n    }\n    try {\n        const userRecord = await firebase_admin__WEBPACK_IMPORTED_MODULE_0__.auth().getUserByEmail(email);\n        return userRecord;\n    } catch (error) {\n        console.error(\"❌ Error getting user by email:\", error);\n        throw error;\n    }\n}\n// Update user\nasync function updateFirebaseUser(uid, updates) {\n    const isAdminAvailable = initializeFirebaseAdmin();\n    if (!isAdminAvailable) {\n        return mockFirebaseAdmin.updateUser(uid, updates);\n    }\n    try {\n        console.log(`🔄 Updating Firebase user: ${uid}`);\n        const userRecord = await firebase_admin__WEBPACK_IMPORTED_MODULE_0__.auth().updateUser(uid, updates);\n        console.log(`✅ Firebase user updated successfully: ${uid}`);\n        return userRecord;\n    } catch (error) {\n        console.error(\"❌ Error updating Firebase user:\", error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/firebase-admin.ts\n");

/***/ }),

/***/ "(rsc)/./services/firebase.ts":
/*!******************************!*\
  !*** ./services/firebase.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   storage: () => (/* binding */ storage)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"(rsc)/./node_modules/firebase/app/dist/index.mjs\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ \"(rsc)/./node_modules/firebase/auth/dist/index.mjs\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"(rsc)/./node_modules/firebase/firestore/dist/index.mjs\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/storage */ \"(rsc)/./node_modules/firebase/storage/dist/index.mjs\");\n\n\n\n\n// Debug: Log environment variables (remove in production)\nconsole.log(\"Firebase Config Debug:\", {\n    apiKey:  true ? \"✓ Set\" : 0,\n    authDomain:  true ? \"✓ Set\" : 0,\n    projectId:  true ? \"✓ Set\" : 0,\n    storageBucket:  true ? \"✓ Set\" : 0,\n    messagingSenderId:  true ? \"✓ Set\" : 0,\n    appId:  true ? \"✓ Set\" : 0\n});\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDD3_U64MVrZp2iNxYWVX9_hHytC9x_WVo\",\n    authDomain: \"reactgladgrade.firebaseapp.com\",\n    projectId: \"reactgladgrade\",\n    storageBucket: \"reactgladgrade.appspot.com\",\n    messagingSenderId: \"360532994710\",\n    appId: \"1:360532994710:web:7376b3b3bab542567bf0b7\",\n    measurementId: \"G-G7Y7B5CME3\"\n};\n// Validate required fields\nconst requiredFields = [\n    \"apiKey\",\n    \"authDomain\",\n    \"projectId\",\n    \"appId\"\n];\nconst missingFields = requiredFields.filter((field)=>!firebaseConfig[field]);\nif (missingFields.length > 0) {\n    console.error(\"Missing Firebase configuration fields:\", missingFields);\n    console.error(\"Current config:\", firebaseConfig);\n    console.error(\"Make sure your .env.local file is in the root directory and restart the dev server\");\n    throw new Error(`Missing Firebase configuration: ${missingFields.join(\", \")}`);\n}\n// Initialize Firebase\nlet app = null;\nlet auth = null;\nlet db = null;\nlet storage = null;\ntry {\n    app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig);\n    auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.getAuth)(app);\n    db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getFirestore)(app);\n    storage = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_3__.getStorage)(app);\n    console.log(\"✅ Firebase initialized successfully\");\n} catch (error) {\n    console.error(\"❌ Firebase initialization failed:\", error);\n    throw error;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (app);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zZXJ2aWNlcy9maXJlYmFzZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE0QztBQUNMO0FBQ1U7QUFDSjtBQUU3QywwREFBMEQ7QUFDMURJLFFBQVFDLEdBQUcsQ0FBQywwQkFBMEI7SUFDcENDLFFBQVFDLEtBQXdDLEdBQUcsVUFBVSxDQUFXO0lBQ3hFRyxZQUFZSCxLQUE0QyxHQUFHLFVBQVUsQ0FBVztJQUNoRkssV0FBV0wsS0FBMkMsR0FBRyxVQUFVLENBQVc7SUFDOUVPLGVBQWVQLEtBQStDLEdBQUcsVUFBVSxDQUFXO0lBQ3RGUyxtQkFBbUJULEtBQW9ELEdBQUcsVUFBVSxDQUFXO0lBQy9GVyxPQUFPWCxLQUF1QyxHQUFHLFVBQVUsQ0FBVztBQUN4RTtBQUVBLHdDQUF3QztBQUN4QyxNQUFNYSxpQkFBaUI7SUFDckJkLFFBQVFDLHlDQUF3QztJQUNoREcsWUFBWUgsZ0NBQTRDO0lBQ3hESyxXQUFXTCxnQkFBMkM7SUFDdERPLGVBQWVQLDRCQUErQztJQUM5RFMsbUJBQW1CVCxjQUFvRDtJQUN2RVcsT0FBT1gsMkNBQXVDO0lBQzlDYyxlQUFlZCxjQUErQztBQUNoRTtBQUVBLDJCQUEyQjtBQUMzQixNQUFNZ0IsaUJBQWlCO0lBQUM7SUFBVTtJQUFjO0lBQWE7Q0FBUTtBQUNyRSxNQUFNQyxnQkFBZ0JELGVBQWVFLE1BQU0sQ0FBQyxDQUFDQyxRQUFVLENBQUNOLGNBQWMsQ0FBQ00sTUFBcUM7QUFFNUcsSUFBSUYsY0FBY0csTUFBTSxHQUFHLEdBQUc7SUFDNUJ2QixRQUFRd0IsS0FBSyxDQUFDLDBDQUEwQ0o7SUFDeERwQixRQUFRd0IsS0FBSyxDQUFDLG1CQUFtQlI7SUFDakNoQixRQUFRd0IsS0FBSyxDQUFDO0lBQ2QsTUFBTSxJQUFJQyxNQUFNLENBQUMsZ0NBQWdDLEVBQUVMLGNBQWNNLElBQUksQ0FBQyxNQUFNLENBQUM7QUFDL0U7QUFFQSxzQkFBc0I7QUFDdEIsSUFBSUMsTUFBVztBQUNmLElBQUlDLE9BQVk7QUFDaEIsSUFBSUMsS0FBVTtBQUNkLElBQUlDLFVBQWU7QUFFbkIsSUFBSTtJQUNGSCxNQUFNL0IsMkRBQWFBLENBQUNvQjtJQUNwQlksT0FBTy9CLHNEQUFPQSxDQUFDOEI7SUFDZkUsS0FBSy9CLGdFQUFZQSxDQUFDNkI7SUFDbEJHLFVBQVUvQiw0REFBVUEsQ0FBQzRCO0lBQ3JCM0IsUUFBUUMsR0FBRyxDQUFDO0FBQ2QsRUFBRSxPQUFPdUIsT0FBTztJQUNkeEIsUUFBUXdCLEtBQUssQ0FBQyxxQ0FBcUNBO0lBQ25ELE1BQU1BO0FBQ1I7QUFFNEI7QUFDNUIsaUVBQWVHLEdBQUdBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vc2VydmljZXMvZmlyZWJhc2UudHM/OGNlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbml0aWFsaXplQXBwIH0gZnJvbSBcImZpcmViYXNlL2FwcFwiXG5pbXBvcnQgeyBnZXRBdXRoIH0gZnJvbSBcImZpcmViYXNlL2F1dGhcIlxuaW1wb3J0IHsgZ2V0RmlyZXN0b3JlIH0gZnJvbSBcImZpcmViYXNlL2ZpcmVzdG9yZVwiXG5pbXBvcnQgeyBnZXRTdG9yYWdlIH0gZnJvbSBcImZpcmViYXNlL3N0b3JhZ2VcIlxuXG4vLyBEZWJ1ZzogTG9nIGVudmlyb25tZW50IHZhcmlhYmxlcyAocmVtb3ZlIGluIHByb2R1Y3Rpb24pXG5jb25zb2xlLmxvZyhcIkZpcmViYXNlIENvbmZpZyBEZWJ1ZzpcIiwge1xuICBhcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVkgPyBcIuKckyBTZXRcIiA6IFwi4pyXIE1pc3NpbmdcIixcbiAgYXV0aERvbWFpbjogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfQVVUSF9ET01BSU4gPyBcIuKckyBTZXRcIiA6IFwi4pyXIE1pc3NpbmdcIixcbiAgcHJvamVjdElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9QUk9KRUNUX0lEID8gXCLinJMgU2V0XCIgOiBcIuKclyBNaXNzaW5nXCIsXG4gIHN0b3JhZ2VCdWNrZXQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX1NUT1JBR0VfQlVDS0VUID8gXCLinJMgU2V0XCIgOiBcIuKclyBNaXNzaW5nXCIsXG4gIG1lc3NhZ2luZ1NlbmRlcklkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9NRVNTQUdJTkdfU0VOREVSX0lEID8gXCLinJMgU2V0XCIgOiBcIuKclyBNaXNzaW5nXCIsXG4gIGFwcElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9BUFBfSUQgPyBcIuKckyBTZXRcIiA6IFwi4pyXIE1pc3NpbmdcIixcbn0pXG5cbi8vIFlvdXIgd2ViIGFwcCdzIEZpcmViYXNlIGNvbmZpZ3VyYXRpb25cbmNvbnN0IGZpcmViYXNlQ29uZmlnID0ge1xuICBhcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVksXG4gIGF1dGhEb21haW46IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FVVEhfRE9NQUlOLFxuICBwcm9qZWN0SWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX1BST0pFQ1RfSUQsXG4gIHN0b3JhZ2VCdWNrZXQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX1NUT1JBR0VfQlVDS0VULFxuICBtZXNzYWdpbmdTZW5kZXJJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfTUVTU0FHSU5HX1NFTkRFUl9JRCxcbiAgYXBwSWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQUF9JRCxcbiAgbWVhc3VyZW1lbnRJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfTUVBU1VSRU1FTlRfSUQsXG59XG5cbi8vIFZhbGlkYXRlIHJlcXVpcmVkIGZpZWxkc1xuY29uc3QgcmVxdWlyZWRGaWVsZHMgPSBbXCJhcGlLZXlcIiwgXCJhdXRoRG9tYWluXCIsIFwicHJvamVjdElkXCIsIFwiYXBwSWRcIl1cbmNvbnN0IG1pc3NpbmdGaWVsZHMgPSByZXF1aXJlZEZpZWxkcy5maWx0ZXIoKGZpZWxkKSA9PiAhZmlyZWJhc2VDb25maWdbZmllbGQgYXMga2V5b2YgdHlwZW9mIGZpcmViYXNlQ29uZmlnXSlcblxuaWYgKG1pc3NpbmdGaWVsZHMubGVuZ3RoID4gMCkge1xuICBjb25zb2xlLmVycm9yKFwiTWlzc2luZyBGaXJlYmFzZSBjb25maWd1cmF0aW9uIGZpZWxkczpcIiwgbWlzc2luZ0ZpZWxkcylcbiAgY29uc29sZS5lcnJvcihcIkN1cnJlbnQgY29uZmlnOlwiLCBmaXJlYmFzZUNvbmZpZylcbiAgY29uc29sZS5lcnJvcihcIk1ha2Ugc3VyZSB5b3VyIC5lbnYubG9jYWwgZmlsZSBpcyBpbiB0aGUgcm9vdCBkaXJlY3RvcnkgYW5kIHJlc3RhcnQgdGhlIGRldiBzZXJ2ZXJcIilcbiAgdGhyb3cgbmV3IEVycm9yKGBNaXNzaW5nIEZpcmViYXNlIGNvbmZpZ3VyYXRpb246ICR7bWlzc2luZ0ZpZWxkcy5qb2luKFwiLCBcIil9YClcbn1cblxuLy8gSW5pdGlhbGl6ZSBGaXJlYmFzZVxubGV0IGFwcDogYW55ID0gbnVsbFxubGV0IGF1dGg6IGFueSA9IG51bGxcbmxldCBkYjogYW55ID0gbnVsbFxubGV0IHN0b3JhZ2U6IGFueSA9IG51bGxcblxudHJ5IHtcbiAgYXBwID0gaW5pdGlhbGl6ZUFwcChmaXJlYmFzZUNvbmZpZylcbiAgYXV0aCA9IGdldEF1dGgoYXBwKVxuICBkYiA9IGdldEZpcmVzdG9yZShhcHApXG4gIHN0b3JhZ2UgPSBnZXRTdG9yYWdlKGFwcClcbiAgY29uc29sZS5sb2coXCLinIUgRmlyZWJhc2UgaW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5XCIpXG59IGNhdGNoIChlcnJvcikge1xuICBjb25zb2xlLmVycm9yKFwi4p2MIEZpcmViYXNlIGluaXRpYWxpemF0aW9uIGZhaWxlZDpcIiwgZXJyb3IpXG4gIHRocm93IGVycm9yXG59XG5cbmV4cG9ydCB7IGF1dGgsIGRiLCBzdG9yYWdlIH1cbmV4cG9ydCBkZWZhdWx0IGFwcFxuIl0sIm5hbWVzIjpbImluaXRpYWxpemVBcHAiLCJnZXRBdXRoIiwiZ2V0RmlyZXN0b3JlIiwiZ2V0U3RvcmFnZSIsImNvbnNvbGUiLCJsb2ciLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfQVBJX0tFWSIsImF1dGhEb21haW4iLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9BVVRIX0RPTUFJTiIsInByb2plY3RJZCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX1BST0pFQ1RfSUQiLCJzdG9yYWdlQnVja2V0IiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfU1RPUkFHRV9CVUNLRVQiLCJtZXNzYWdpbmdTZW5kZXJJZCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX01FU1NBR0lOR19TRU5ERVJfSUQiLCJhcHBJZCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQUF9JRCIsImZpcmViYXNlQ29uZmlnIiwibWVhc3VyZW1lbnRJZCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX01FQVNVUkVNRU5UX0lEIiwicmVxdWlyZWRGaWVsZHMiLCJtaXNzaW5nRmllbGRzIiwiZmlsdGVyIiwiZmllbGQiLCJsZW5ndGgiLCJlcnJvciIsIkVycm9yIiwiam9pbiIsImFwcCIsImF1dGgiLCJkYiIsInN0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./services/firebase.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry","vendor-chunks/@firebase","vendor-chunks/undici","vendor-chunks/@grpc","vendor-chunks/firebase","vendor-chunks/protobufjs","vendor-chunks/long","vendor-chunks/@protobufjs","vendor-chunks/lodash.camelcase","vendor-chunks/tslib","vendor-chunks/idb"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclients%2Froute&page=%2Fapi%2Fclients%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclients%2Froute.ts&appDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmiguelgiraldo%2FDEVSPACE%2Fdev_gladgrade_portal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();